<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.2.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2017-06-05T22:12:06</timestamp>
        <product version="5.5.4954.46574" user="Unregistered " serial="000-00-000-391">Dotfuscator and Analytics Community Edition</product>
    </header>
    <mapping>
        <module>
            <name>AForge.dll</name>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{D4933F01-4742-407D-982E-D47DDB340621}</name>
                <newname>g</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,int32&gt;</signature>
                        <name>$$method0x600001d-1</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.CommunicationBufferEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[], int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MessageLength</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>GetMessage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetMessageString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>index</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>length</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>message</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>MessageLength</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.ConnectionFailedException</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.ConnectionLostException</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.DeviceBusyException</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.DeviceErrorException</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.DoublePoint</name>
                <methodlist>
                    <method>
                        <signature>void(float64, float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.DoublePoint(AForge.DoublePoint, AForge.DoublePoint)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>AForge.DoublePoint(AForge.DoublePoint, float64)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>float64(AForge.DoublePoint)</signature>
                        <name>DistanceTo</name>
                    </method>
                    <method>
                        <signature>AForge.DoublePoint(AForge.DoublePoint, float64)</signature>
                        <name>Divide</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>EuclideanNorm</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>AForge.DoublePoint(AForge.DoublePoint, float64)</signature>
                        <name>Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.DoublePoint(AForge.DoublePoint, AForge.DoublePoint)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>AForge.DoublePoint(AForge.DoublePoint, float64)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>AForge.DoublePoint(AForge.DoublePoint, float64)</signature>
                        <name>op_Division</name>
                    </method>
                    <method>
                        <signature>bool(AForge.DoublePoint, AForge.DoublePoint)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(AForge.DoublePoint)</signature>
                        <name>op_Explicit</name>
                    </method>
                    <method>
                        <signature>AForge.Point(AForge.DoublePoint)</signature>
                        <name>op_Explicit</name>
                    </method>
                    <method>
                        <signature>bool(AForge.DoublePoint, AForge.DoublePoint)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>AForge.DoublePoint(AForge.DoublePoint, float64)</signature>
                        <name>op_Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.DoublePoint(AForge.DoublePoint, AForge.DoublePoint)</signature>
                        <name>op_Subtraction</name>
                    </method>
                    <method>
                        <signature>AForge.DoublePoint(AForge.DoublePoint, float64)</signature>
                        <name>op_Subtraction</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint()</signature>
                        <name>Round</name>
                    </method>
                    <method>
                        <signature>float64(AForge.DoublePoint)</signature>
                        <name>SquaredDistanceTo</name>
                    </method>
                    <method>
                        <signature>AForge.DoublePoint(AForge.DoublePoint, AForge.DoublePoint)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>AForge.DoublePoint(AForge.DoublePoint, float64)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>X</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>Y</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.DoubleRange</name>
                <methodlist>
                    <method>
                        <signature>void(float64, float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Length</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Max</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Min</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>bool(AForge.DoubleRange)</signature>
                        <name>IsInside</name>
                    </method>
                    <method>
                        <signature>bool(float64)</signature>
                        <name>IsInside</name>
                    </method>
                    <method>
                        <signature>bool(AForge.DoubleRange)</signature>
                        <name>IsOverlapping</name>
                    </method>
                    <method>
                        <signature>bool(AForge.DoubleRange, AForge.DoubleRange)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>bool(AForge.DoubleRange, AForge.DoubleRange)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Max</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Min</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange(bool)</signature>
                        <name>ToIntRange</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>max</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>min</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>Length</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>Max</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>Min</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.IntPoint</name>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(AForge.IntPoint, AForge.IntPoint)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(AForge.IntPoint, int32)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>float32(AForge.IntPoint)</signature>
                        <name>DistanceTo</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(AForge.IntPoint, int32)</signature>
                        <name>Divide</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>EuclideanNorm</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(AForge.IntPoint, int32)</signature>
                        <name>Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(AForge.IntPoint, AForge.IntPoint)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(AForge.IntPoint, int32)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(AForge.IntPoint, int32)</signature>
                        <name>op_Division</name>
                    </method>
                    <method>
                        <signature>bool(AForge.IntPoint, AForge.IntPoint)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>AForge.DoublePoint(AForge.IntPoint)</signature>
                        <name>op_Implicit</name>
                    </method>
                    <method>
                        <signature>AForge.Point(AForge.IntPoint)</signature>
                        <name>op_Implicit</name>
                    </method>
                    <method>
                        <signature>bool(AForge.IntPoint, AForge.IntPoint)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(AForge.IntPoint, int32)</signature>
                        <name>op_Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(AForge.IntPoint, AForge.IntPoint)</signature>
                        <name>op_Subtraction</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(AForge.IntPoint, int32)</signature>
                        <name>op_Subtraction</name>
                    </method>
                    <method>
                        <signature>float32(AForge.Point)</signature>
                        <name>SquaredDistanceTo</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(AForge.IntPoint, AForge.IntPoint)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(AForge.IntPoint, int32)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>X</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Y</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.IntRange</name>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Length</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Max</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Min</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>bool(AForge.IntRange)</signature>
                        <name>IsInside</name>
                    </method>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>IsInside</name>
                    </method>
                    <method>
                        <signature>bool(AForge.IntRange)</signature>
                        <name>IsOverlapping</name>
                    </method>
                    <method>
                        <signature>bool(AForge.IntRange, AForge.IntRange)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>AForge.Range(AForge.IntRange)</signature>
                        <name>op_Implicit</name>
                    </method>
                    <method>
                        <signature>bool(AForge.IntRange, AForge.IntRange)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Max</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Min</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>max</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>min</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Length</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Max</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Min</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.MessageTransferHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, AForge.CommunicationBufferEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, AForge.CommunicationBufferEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.NotConnectedException</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Parallel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, AForge.Parallel/ForLoopBody)</signature>
                        <name>For</name>
                    </method>
                    <method>
                        <signature>AForge.Parallel()</signature>
                        <name>get_Instance</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ThreadsCount</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Initialize</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ThreadsCount</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Terminate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>WorkerThread</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>currentIndex</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>AForge.Parallel modreq (System.Runtime.CompilerServices.IsVolatile)</signature>
                        <name>instance</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Threading.AutoResetEvent[]</signature>
                        <name>jobAvailable</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>AForge.Parallel/ForLoopBody</signature>
                        <name>loopBody</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stopIndex</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>sync</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Threading.ManualResetEvent[]</signature>
                        <name>threadIdle</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Threading.Thread[]</signature>
                        <name>threads</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>threadsCount</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Parallel()</signature>
                        <name>Instance</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ThreadsCount</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Parallel/ForLoopBody</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(int32, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Point</name>
                <methodlist>
                    <method>
                        <signature>void(float32, float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Point(AForge.Point, AForge.Point)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>AForge.Point(AForge.Point, float32)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>float32(AForge.Point)</signature>
                        <name>DistanceTo</name>
                    </method>
                    <method>
                        <signature>AForge.Point(AForge.Point, float32)</signature>
                        <name>Divide</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>EuclideanNorm</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>AForge.Point(AForge.Point, float32)</signature>
                        <name>Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Point(AForge.Point, AForge.Point)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>AForge.Point(AForge.Point, float32)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>AForge.Point(AForge.Point, float32)</signature>
                        <name>op_Division</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Point, AForge.Point)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(AForge.Point)</signature>
                        <name>op_Explicit</name>
                    </method>
                    <method>
                        <signature>AForge.DoublePoint(AForge.Point)</signature>
                        <name>op_Implicit</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Point, AForge.Point)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>AForge.Point(AForge.Point, float32)</signature>
                        <name>op_Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Point(AForge.Point, AForge.Point)</signature>
                        <name>op_Subtraction</name>
                    </method>
                    <method>
                        <signature>AForge.Point(AForge.Point, float32)</signature>
                        <name>op_Subtraction</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint()</signature>
                        <name>Round</name>
                    </method>
                    <method>
                        <signature>float32(AForge.Point)</signature>
                        <name>SquaredDistanceTo</name>
                    </method>
                    <method>
                        <signature>AForge.Point(AForge.Point, AForge.Point)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>AForge.Point(AForge.Point, float32)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>X</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>Y</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.PolishExpression</name>
                <methodlist>
                    <method>
                        <signature>float64(string, float64[])</signature>
                        <name>Evaluate</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Range</name>
                <methodlist>
                    <method>
                        <signature>void(float32, float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Length</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Max</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Min</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Range)</signature>
                        <name>IsInside</name>
                    </method>
                    <method>
                        <signature>bool(float32)</signature>
                        <name>IsInside</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Range)</signature>
                        <name>IsOverlapping</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Range, AForge.Range)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Range, AForge.Range)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_Max</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_Min</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange(bool)</signature>
                        <name>ToIntRange</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>max</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>min</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>Length</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Max</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Min</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.SystemTools</name>
                <methodlist>
                    <method>
                        <signature>native int(native int, native int, int32)</signature>
                        <name>CopyUnmanagedMemory</name>
                    </method>
                    <method>
                        <signature>unsigned int8*(unsigned int8*, unsigned int8*, int32)</signature>
                        <name>CopyUnmanagedMemory</name>
                    </method>
                    <method>
                        <signature>unsigned int8*(unsigned int8*, unsigned int8*, int32)</signature>
                        <name>memcpy</name>
                    </method>
                    <method>
                        <signature>unsigned int8*(unsigned int8*, int32, int32)</signature>
                        <name>memset</name>
                    </method>
                    <method>
                        <signature>native int(native int, int32, int32)</signature>
                        <name>SetUnmanagedMemory</name>
                    </method>
                    <method>
                        <signature>unsigned int8*(unsigned int8*, int32, int32)</signature>
                        <name>SetUnmanagedMemory</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.ThreadSafeRandom</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>Next</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>Next</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>Next</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>NextBytes</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>NextDouble</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>object</signature>
                        <name>sync</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
        </module>
        <module>
            <name>AForge.Imaging.dll</name>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}</name>
                <newname>at</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=20</signature>
                        <name>$$method0x600006a-1</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=20</signature>
                        <name>$$method0x600006a-2</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=20</signature>
                        <name>$$method0x60000a8-1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=20</signature>
                        <name>$$method0x60000a8-2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=12</signature>
                        <name>$$method0x60000ac-1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=20</signature>
                        <name>$$method0x60000f3-1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=20</signature>
                        <name>$$method0x60000f3-2</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=36</signature>
                        <name>$$method0x60001b8-1</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=100</signature>
                        <name>$$method0x6000243-1</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=20</signature>
                        <name>$$method0x600024c-1</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=20</signature>
                        <name>$$method0x600024c-2</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=36</signature>
                        <name>$$method0x600030c-1</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=20</signature>
                        <name>$$method0x6000333-1</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=12</signature>
                        <name>$$method0x6000333-2</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=20</signature>
                        <name>$$method0x60003a7-1</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=12</signature>
                        <name>$$method0x60003e4-1</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=36</signature>
                        <name>$$method0x6000415-1</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=16</signature>
                        <name>$$method0x600046e-1</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=16</signature>
                        <name>$$method0x600046f-1</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=18</signature>
                        <name>$$method0x600052a-1</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=16</signature>
                        <name>$$method0x60005a5-1</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=16</signature>
                        <name>$$method0x60005a8-1</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=18</signature>
                        <name>$$method0x60005c9-1</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=16</signature>
                        <name>$$method0x60005f0-1</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=20</signature>
                        <name>$$method0x600064e-1</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=12</signature>
                        <name>$$method0x600064e-2</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=20</signature>
                        <name>$$method0x600064f-1</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=28</signature>
                        <name>$$method0x6000663-1</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=32</signature>
                        <name>$$method0x6000667-1</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=32</signature>
                        <name>$$method0x6000667-2</name>
                        <newname>r</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=100</name>
                <newname>at/e</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=12</name>
                <newname>at/b</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=16</name>
                <newname>at/g</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=18</name>
                <newname>at/h</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=20</name>
                <newname>at/c</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=28</name>
                <newname>at/d</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=32</name>
                <newname>at/f</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{37B60E10-52A5-43BE-987A-B8D4999A69A7}/__StaticArrayInitTypeSize=36</name>
                <newname>at/a</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Blob</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Imaging.Blob)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, System.Drawing.Rectangle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Area</name>
                    </method>
                    <method>
                        <signature>AForge.Point()</signature>
                        <name>get_CenterOfGravity</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_ColorMean</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_ColorStdDev</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Fullness</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ID</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>get_Image</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_OriginalSize</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>get_Rectangle</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Area</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Point)</signature>
                        <name>set_CenterOfGravity</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_ColorMean</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_ColorStdDev</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Fullness</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ID</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>set_Image</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_OriginalSize</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>area</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>AForge.Point</signature>
                        <name>cog</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>colorMean</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>colorStdDev</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>fullness</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>id</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.UnmanagedImage</signature>
                        <name>image</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>originalSize</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Rectangle</signature>
                        <name>rect</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Area</name>
                    </property>
                    <property>
                        <signature>AForge.Point()</signature>
                        <name>CenterOfGravity</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>ColorMean</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>ColorStdDev</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>Fullness</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ID</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>Image</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>OriginalSize</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>Rectangle</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.BlobCounter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>BuildObjectsMap</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BackgroundThreshold</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BackgroundThreshold</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>backgroundThresholdB</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>backgroundThresholdG</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>backgroundThresholdR</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>BackgroundThreshold</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.BlobCounterBase</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>BuildObjectsMap</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>CollectObjectsInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.Blob, bool)</signature>
                        <name>ExtractBlobsImage</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, AForge.Imaging.Blob, bool)</signature>
                        <name>ExtractBlobsImage</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.IBlobsFilter()</signature>
                        <name>get_BlobsFilter</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CoupledSizeFiltering</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_FilterBlobs</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxHeight</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxWidth</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinHeight</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinWidth</name>
                    </method>
                    <method>
                        <signature>int32[]()</signature>
                        <name>get_ObjectLabels</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ObjectsCount</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.ObjectsOrder()</signature>
                        <name>get_ObjectsOrder</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(AForge.Imaging.Blob)</signature>
                        <name>GetBlobsEdgePoints</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Blob, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;&amp;, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;&amp;)</signature>
                        <name>GetBlobsLeftAndRightEdges</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Blob, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;&amp;, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;&amp;)</signature>
                        <name>GetBlobsTopAndBottomEdges</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.Blob[](AForge.Imaging.UnmanagedImage, bool)</signature>
                        <name>GetObjects</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.Blob[](System.Drawing.Bitmap, bool)</signature>
                        <name>GetObjects</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.Blob[]()</signature>
                        <name>GetObjectsInformation</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle[]()</signature>
                        <name>GetObjectsRectangles</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.IBlobsFilter)</signature>
                        <name>set_BlobsFilter</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CoupledSizeFiltering</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_FilterBlobs</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxHeight</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxWidth</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MinHeight</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MinWidth</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.ObjectsOrder)</signature>
                        <name>set_ObjectsOrder</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;AForge.Imaging.Blob&gt;</signature>
                        <name>blobs</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>coupledSizeFiltering</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.IBlobsFilter</signature>
                        <name>filter</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>filterBlobs</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>imageHeight</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>imageWidth</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxHeight</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxWidth</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>minHeight</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>minWidth</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>objectLabels</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>objectsCount</name>
                    </field>
                    <field>
                        <signature>AForge.Imaging.ObjectsOrder</signature>
                        <name>objectsOrder</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Imaging.IBlobsFilter()</signature>
                        <name>BlobsFilter</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>CoupledSizeFiltering</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>FilterBlobs</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxHeight</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxWidth</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MinHeight</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MinWidth</name>
                    </property>
                    <property>
                        <signature>int32[]()</signature>
                        <name>ObjectLabels</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ObjectsCount</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.ObjectsOrder()</signature>
                        <name>ObjectsOrder</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.BlobCounterBase/BlobsSorter</name>
                <newname>AForge.Imaging.BlobCounterBase/a</newname>
                <methodlist>
                    <method>
                        <signature>void(AForge.Imaging.ObjectsOrder)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(AForge.Imaging.Blob, AForge.Imaging.Blob)</signature>
                        <name>Compare</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.ObjectsOrder</signature>
                        <name>order</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.BlockMatch</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.IntPoint, AForge.IntPoint, float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint()</signature>
                        <name>get_MatchPoint</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Similarity</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint()</signature>
                        <name>get_SourcePoint</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.IntPoint</signature>
                        <name>matchPoint</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>similarity</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.IntPoint</signature>
                        <name>sourcePoint</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.IntPoint()</signature>
                        <name>MatchPoint</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Similarity</name>
                    </property>
                    <property>
                        <signature>AForge.IntPoint()</signature>
                        <name>SourcePoint</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ColorReduction.BurkesColorDithering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ColorReduction.ColorErrorDiffusionToAdjacentNeighbors</name>
                <methodlist>
                    <method>
                        <signature>void(int32[][])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CalculateCoefficientsSum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, unsigned int8*)</signature>
                        <name>Diffuse</name>
                    </method>
                    <method>
                        <signature>int32[][]()</signature>
                        <name>get_Coefficients</name>
                    </method>
                    <method>
                        <signature>void(int32[][])</signature>
                        <name>set_Coefficients</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32[][]</signature>
                        <name>coefficients</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>coefficientsSum</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32[][]()</signature>
                        <name>Coefficients</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ColorReduction.ColorImageQuantizer</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Imaging.ColorReduction.IColorQuantizer)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color[](AForge.Imaging.UnmanagedImage, int32)</signature>
                        <name>CalculatePalette</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color[](System.Drawing.Bitmap, int32)</signature>
                        <name>CalculatePalette</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.ColorReduction.IColorQuantizer()</signature>
                        <name>get_Quantizer</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseCaching</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32)</signature>
                        <name>GetClosestColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(AForge.Imaging.UnmanagedImage, int32)</signature>
                        <name>ReduceColors</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(AForge.Imaging.UnmanagedImage, System.Drawing.Color[])</signature>
                        <name>ReduceColors</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap, int32)</signature>
                        <name>ReduceColors</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap, System.Drawing.Color[])</signature>
                        <name>ReduceColors</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.ColorReduction.IColorQuantizer)</signature>
                        <name>set_Quantizer</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseCaching</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Color,int32&gt;</signature>
                        <name>cache</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color[]</signature>
                        <name>paletteToUse</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.ColorReduction.IColorQuantizer</signature>
                        <name>quantizer</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>useCaching</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Imaging.ColorReduction.IColorQuantizer()</signature>
                        <name>Quantizer</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseCaching</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ColorReduction.ErrorDiffusionColorDithering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, unsigned int8*)</signature>
                        <name>Diffuse</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color[]()</signature>
                        <name>get_ColorTable</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseCaching</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color(int32, int32, int32, unsigned int8&amp;)</signature>
                        <name>GetClosestColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color[])</signature>
                        <name>set_ColorTable</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseCaching</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Color,unsigned int8&gt;</signature>
                        <name>cache</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color[]</signature>
                        <name>colorTable</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>height</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pixelSize</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stride</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>useCaching</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>width</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>x</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>y</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Color[]()</signature>
                        <name>ColorTable</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseCaching</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ColorReduction.FloydSteinbergColorDithering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ColorReduction.IColorQuantizer</name>
                <methodlist>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>AddColor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color[](int32)</signature>
                        <name>GetPalette</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ColorReduction.JarvisJudiceNinkeColorDithering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ColorReduction.MedianCutCube</name>
                <newname>a5</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;System.Drawing.Color&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BlueSize</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_Color</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_GreenSize</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RedSize</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(int32, AForge.Imaging.ColorReduction.MedianCutCube&amp;, AForge.Imaging.ColorReduction.MedianCutCube&amp;)</signature>
                        <name>SplitAtMedian</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.Color&gt;</signature>
                        <name>colors</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;System.Drawing.Color&gt;</signature>
                        <name>cubeColor</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>maxB</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>maxG</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>maxR</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>minB</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>minG</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>minR</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ColorReduction.MedianCutCube/BlueComparer</name>
                <newname>a5/c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(System.Drawing.Color, System.Drawing.Color)</signature>
                        <name>Compare</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ColorReduction.MedianCutCube/GreenComparer</name>
                <newname>a5/b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(System.Drawing.Color, System.Drawing.Color)</signature>
                        <name>Compare</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ColorReduction.MedianCutCube/RedComparer</name>
                <newname>a5/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(System.Drawing.Color, System.Drawing.Color)</signature>
                        <name>Compare</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ColorReduction.MedianCutQuantizer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>AddColor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color[](int32)</signature>
                        <name>GetPalette</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;AForge.Imaging.ColorReduction.MedianCutCube&gt;, int32)</signature>
                        <name>SplitCubes</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.Color&gt;</signature>
                        <name>colors</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ColorReduction.OrderedColorDithering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color[]()</signature>
                        <name>get_ColorTable</name>
                    </method>
                    <method>
                        <signature>unsigned int8[0...,0...]()</signature>
                        <name>get_ThresholdMatrix</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseCaching</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color(int32, int32, int32, unsigned int8&amp;)</signature>
                        <name>GetClosestColor</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color[])</signature>
                        <name>set_ColorTable</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[0...,0...])</signature>
                        <name>set_ThresholdMatrix</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseCaching</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Color,unsigned int8&gt;</signature>
                        <name>cache</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color[]</signature>
                        <name>colorTable</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[0...,0...]</signature>
                        <name>matrix</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>useCaching</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Color[]()</signature>
                        <name>ColorTable</name>
                    </property>
                    <property>
                        <signature>unsigned int8[0...,0...]()</signature>
                        <name>ThresholdMatrix</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseCaching</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ColorReduction.SierraColorDithering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ColorReduction.StuckiColorDithering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ComplexFilters.FrequencyFilter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.ComplexImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_FrequencyRange</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_FrequencyRange</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>frequencyRange</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>FrequencyRange</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ComplexFilters.IComplexFilter</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Imaging.ComplexImage)</signature>
                        <name>Apply</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ComplexImage</name>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BackwardFourierTransform</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ForwardFourierTransform</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.ComplexImage(System.Drawing.Bitmap)</signature>
                        <name>FromBitmap</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.ComplexImage(System.Drawing.Imaging.BitmapData)</signature>
                        <name>FromBitmap</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex[0...,0...]()</signature>
                        <name>get_Data</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_FourierTransformed</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Height</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Width</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>ToBitmap</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Math.Complex[0...,0...]</signature>
                        <name>data</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>fourierTransformed</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>height</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>width</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Math.Complex[0...,0...]()</signature>
                        <name>Data</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>FourierTransformed</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Height</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Width</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.DocumentSkewChecker</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>CollectLines</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_LocalPeakRadius</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_MaxBeta</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_MaxSkewToDetect</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_MinBeta</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_StepsPerDegree</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.HoughLine[](int32)</signature>
                        <name>GetMostIntensiveLines</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64(AForge.Imaging.UnmanagedImage)</signature>
                        <name>GetSkewAngle</name>
                    </method>
                    <method>
                        <signature>float64(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>GetSkewAngle</name>
                    </method>
                    <method>
                        <signature>float64(System.Drawing.Bitmap)</signature>
                        <name>GetSkewAngle</name>
                    </method>
                    <method>
                        <signature>float64(System.Drawing.Bitmap, System.Drawing.Rectangle)</signature>
                        <name>GetSkewAngle</name>
                    </method>
                    <method>
                        <signature>float64(System.Drawing.Imaging.BitmapData)</signature>
                        <name>GetSkewAngle</name>
                    </method>
                    <method>
                        <signature>float64(System.Drawing.Imaging.BitmapData, System.Drawing.Rectangle)</signature>
                        <name>GetSkewAngle</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitHoughMap</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_LocalPeakRadius</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_MaxBeta</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_MaxSkewToDetect</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_MinBeta</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_StepsPerDegree</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64[]</signature>
                        <name>cosMap</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>houghHeight</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int16[0...,0...]</signature>
                        <name>houghMap</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>lines</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>localPeakRadius</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>maxMapIntensity</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>maxSkewToDetect</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>needToInitialize</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>float64[]</signature>
                        <name>sinMap</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stepsPerDegree</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>thetaStep</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>LocalPeakRadius</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>MaxBeta</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>MaxSkewToDetect</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>MinBeta</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>StepsPerDegree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Drawing</name>
                <methodlist>
                    <method>
                        <signature>void(int32, int32, AForge.IntPoint, AForge.IntPoint&amp;)</signature>
                        <name>CheckEndPoint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.PixelFormat)</signature>
                        <name>CheckPixelFormat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle, System.Drawing.Color)</signature>
                        <name>FillRectangle</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData, System.Drawing.Rectangle, System.Drawing.Color)</signature>
                        <name>FillRectangle</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.IntPoint, AForge.IntPoint, System.Drawing.Color)</signature>
                        <name>Line</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData, AForge.IntPoint, AForge.IntPoint, System.Drawing.Color)</signature>
                        <name>Line</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, System.Drawing.Color)</signature>
                        <name>Polygon</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, System.Drawing.Color)</signature>
                        <name>Polygon</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, System.Drawing.Color)</signature>
                        <name>Polyline</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, System.Drawing.Color)</signature>
                        <name>Polyline</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle, System.Drawing.Color)</signature>
                        <name>Rectangle</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData, System.Drawing.Rectangle, System.Drawing.Color)</signature>
                        <name>Rectangle</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ExceptionMessage</name>
                <newname>s</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ColorHistogramException</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>GrayHistogramException</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ExhaustiveBlockMatching</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BlockSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_SearchRadius</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_SimilarityThreshold</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.Imaging.BlockMatch&gt;(AForge.Imaging.UnmanagedImage, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.Imaging.BlockMatch&gt;(System.Drawing.Bitmap, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, System.Drawing.Bitmap)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.Imaging.BlockMatch&gt;(System.Drawing.Imaging.BitmapData, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, System.Drawing.Imaging.BitmapData)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_BlockSize</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_SearchRadius</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_SimilarityThreshold</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>blockSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>searchRadius</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>similarityThreshold</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>BlockSize</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>SearchRadius</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>SimilarityThreshold</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ExhaustiveBlockMatching/MatchingsSorter</name>
                <newname>AForge.Imaging.ExhaustiveBlockMatching/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(AForge.Imaging.BlockMatch, AForge.Imaging.BlockMatch)</signature>
                        <name>Compare</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ExhaustiveTemplateMatching</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_SimilarityThreshold</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.TemplateMatch[](AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.TemplateMatch[](AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.TemplateMatch[](System.Drawing.Bitmap, System.Drawing.Bitmap)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.TemplateMatch[](System.Drawing.Bitmap, System.Drawing.Bitmap, System.Drawing.Rectangle)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.TemplateMatch[](System.Drawing.Imaging.BitmapData, System.Drawing.Imaging.BitmapData)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.TemplateMatch[](System.Drawing.Imaging.BitmapData, System.Drawing.Imaging.BitmapData, System.Drawing.Rectangle)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_SimilarityThreshold</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>similarityThreshold</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>SimilarityThreshold</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ExhaustiveTemplateMatching/MatchingsSorter</name>
                <newname>AForge.Imaging.ExhaustiveTemplateMatching/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(object, object)</signature>
                        <name>Compare</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.AdaptiveSmoothing</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Factor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Factor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>factor</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>Factor</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Add</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitFormatTranslations</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.AdditiveNoise</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Random.IRandomNumberGenerator)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Random.IRandomNumberGenerator()</signature>
                        <name>get_Generator</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Random.IRandomNumberGenerator)</signature>
                        <name>set_Generator</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Random.IRandomNumberGenerator</signature>
                        <name>generator</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Random.IRandomNumberGenerator()</signature>
                        <name>Generator</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ApplyMask</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>unsigned int8[0...,0...]()</signature>
                        <name>get_Mask</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_MaskImage</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>get_UnmanagedMaskImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle, unsigned int8*, int32)</signature>
                        <name>ProcessImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8[0...,0...])</signature>
                        <name>set_Mask</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>set_MaskImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>set_UnmanagedMaskImage</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[0...,0...]</signature>
                        <name>mask</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Bitmap</signature>
                        <name>maskImage</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.UnmanagedImage</signature>
                        <name>unmanagedMaskImage</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>unsigned int8[0...,0...]()</signature>
                        <name>Mask</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>MaskImage</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>UnmanagedMaskImage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BackwardQuadrilateralTransformation</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;()</signature>
                        <name>get_DestinationQuadrilateral</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_SourceImage</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>get_SourceUnmanagedImage</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseInterpolation</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>set_DestinationQuadrilateral</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>set_SourceImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>set_SourceUnmanagedImage</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseInterpolation</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;</signature>
                        <name>destinationQuadrilateral</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Bitmap</signature>
                        <name>sourceImage</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.UnmanagedImage</signature>
                        <name>sourceUnmanagedImage</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>useInterpolation</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;()</signature>
                        <name>DestinationQuadrilateral</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>SourceImage</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>SourceUnmanagedImage</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseInterpolation</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BaseFilter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage(AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Imaging.BitmapData)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.PixelFormat)</signature>
                        <name>CheckSourceFormat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BaseFilter2</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_OverlayImage</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>get_UnmanagedOverlayImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>set_OverlayImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>set_UnmanagedOverlayImage</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Bitmap</signature>
                        <name>overlayImage</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.UnmanagedImage</signature>
                        <name>unmanagedOverlayImage</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>OverlayImage</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>UnmanagedOverlayImage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BaseInPlaceFilter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage(AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Imaging.BitmapData)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.PixelFormat)</signature>
                        <name>CheckSourceFormat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BaseInPlaceFilter2</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_OverlayImage</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>get_UnmanagedOverlayImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>set_OverlayImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>set_UnmanagedOverlayImage</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Bitmap</signature>
                        <name>overlayImage</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.UnmanagedImage</signature>
                        <name>unmanagedOverlayImage</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>OverlayImage</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>UnmanagedOverlayImage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BaseInPlacePartialFilter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage(AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Imaging.BitmapData)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, System.Drawing.Rectangle)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData, System.Drawing.Rectangle)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.PixelFormat)</signature>
                        <name>CheckSourceFormat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BaseResizeFilter</name>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size(AForge.Imaging.UnmanagedImage)</signature>
                        <name>CalculateNewImageSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NewHeight</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NewWidth</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NewHeight</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NewWidth</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>newHeight</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>newWidth</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>NewHeight</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NewWidth</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BaseRotateFilter</name>
                <methodlist>
                    <method>
                        <signature>void(float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float64, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size(AForge.Imaging.UnmanagedImage)</signature>
                        <name>CalculateNewImageSize</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Angle</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_FillColor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_KeepSize</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Angle</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_FillColor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_KeepSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>angle</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>fillColor</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>keepSize</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>Angle</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>FillColor</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>KeepSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BaseTransformationFilter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage(AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Imaging.BitmapData)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size(AForge.Imaging.UnmanagedImage)</signature>
                        <name>CalculateNewImageSize</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.PixelFormat)</signature>
                        <name>CheckSourceFormat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BaseUsingCopyPartialFilter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage(AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Imaging.BitmapData)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, System.Drawing.Rectangle)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData, System.Drawing.Rectangle)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.PixelFormat)</signature>
                        <name>CheckSourceFormat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BayerDithering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BayerFilter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32[0...,0...]()</signature>
                        <name>get_BayerPattern</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_PerformDemosaicing</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32[0...,0...])</signature>
                        <name>set_BayerPattern</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_PerformDemosaicing</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32[0...,0...]</signature>
                        <name>bayerPattern</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>performDemosaicing</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32[0...,0...]()</signature>
                        <name>BayerPattern</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>PerformDemosaicing</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BayerFilterOptimized</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ApplyBGGR</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ApplyGRBG</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.Filters.BayerPattern()</signature>
                        <name>get_Pattern</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Filters.BayerPattern)</signature>
                        <name>set_Pattern</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.BayerPattern</signature>
                        <name>bayerPattern</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.Filters.BayerPattern()</signature>
                        <name>Pattern</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BayerPattern</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.BayerPattern</signature>
                        <name>BGGR</name>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.BayerPattern</signature>
                        <name>GRBG</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BilateralSmoothing</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ColorFactor</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_ColorPower</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_EnableParallelProcessing</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_KernelSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_LimitKernelSize</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_SpatialFactor</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_SpatialPower</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitColorFunc</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitFilter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitSpatialFunc</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessWithEdgeChecks</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessWithoutChecks</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessWithoutChecksParallel</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ColorFactor</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_ColorPower</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_EnableParallelProcessing</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_KernelSize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_LimitKernelSize</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_SpatialFactor</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_SpatialPower</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>colorFactor</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>float64[0...,0...]</signature>
                        <name>colorFunc</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>colorPower</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>colorPropertiesChanged</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>colorsCount</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>enableParallelProcessing</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kernelSize</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>limitKernelSize</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxKernelSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>spatialFactor</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>float64[0...,0...]</signature>
                        <name>spatialFunc</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>spatialPower</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>spatialPropertiesChanged</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>ColorFactor</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>ColorPower</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>EnableParallelProcessing</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>KernelSize</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>LimitKernelSize</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>SpatialFactor</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>SpatialPower</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BilateralSmoothing/&lt;&gt;c__DisplayClass4</name>
                <newname>AForge.Imaging.Filters.BilateralSmoothing/a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>&lt;ProcessWithoutChecksParallel&gt;b__0</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>&lt;ProcessWithoutChecksParallel&gt;b__1</name>
                        <newname>k</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.BilateralSmoothing</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int8*</signature>
                        <name>dstBase</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>dstStride</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pixelSize</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8*</signature>
                        <name>srcBase</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>srcKernelFistPixelOffset</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>srcKernelOffset</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>srcStride</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>startX</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stopX</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BinaryDilatation3x3</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BinaryErosion3x3</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BlobsFiltering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.IBlobsFilter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.IBlobsFilter()</signature>
                        <name>get_BlobsFilter</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CoupledSizeFiltering</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxHeight</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxWidth</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinHeight</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinWidth</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.IBlobsFilter)</signature>
                        <name>set_BlobsFilter</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CoupledSizeFiltering</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxHeight</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxWidth</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MinHeight</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MinWidth</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.BlobCounter</signature>
                        <name>blobCounter</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Imaging.IBlobsFilter()</signature>
                        <name>BlobsFilter</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>CoupledSizeFiltering</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxHeight</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxWidth</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MinHeight</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MinWidth</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Blur</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BottomHat</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.Closing</signature>
                        <name>closing</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.Subtract</signature>
                        <name>subtract</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BradleyLocalThresholding</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_PixelBrightnessDifferenceLimit</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_WindowSize</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_PixelBrightnessDifferenceLimit</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_WindowSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>pixelBrightnessDifferenceLimit</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>windowSize</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>PixelBrightnessDifferenceLimit</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>WindowSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BrightnessCorrection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_AdjustValue</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_AdjustValue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>adjustValue</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.LevelsLinear</signature>
                        <name>baseFilter</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>AdjustValue</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.BurkesDithering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.CannyEdgeDetector</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8, unsigned int8, float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_GaussianSigma</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_GaussianSize</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_HighThreshold</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_LowThreshold</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_GaussianSigma</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_GaussianSize</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_HighThreshold</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_LowThreshold</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.GaussianBlur</signature>
                        <name>gaussianFilter</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>highThreshold</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>lowThreshold</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>GaussianSigma</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>GaussianSize</name>
                    </property>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>HighThreshold</name>
                    </property>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>LowThreshold</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.CanvasCrop</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle, System.Drawing.Color)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle, System.Drawing.Color, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_FillColorGray</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_FillColorRGB</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>get_Region</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_FillColorGray</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_FillColorRGB</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle)</signature>
                        <name>set_Region</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillBlue</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillGray</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillGreen</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillRed</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Rectangle</signature>
                        <name>region</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>FillColorGray</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>FillColorRGB</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>Region</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.CanvasFill</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle, System.Drawing.Color)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle, System.Drawing.Color, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_FillColorGray</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_FillColorRGB</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>get_Region</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_FillColorGray</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_FillColorRGB</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle)</signature>
                        <name>set_Region</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillBlue</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillGray</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillGreen</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillRed</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Rectangle</signature>
                        <name>region</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>FillColorGray</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>FillColorRGB</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>Region</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.CanvasMove</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntPoint)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntPoint, System.Drawing.Color)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntPoint, System.Drawing.Color, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntPoint, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_FillColorGray</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_FillColorRGB</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint()</signature>
                        <name>get_MovePoint</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter16bpc</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter8bpc</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_FillColorGray</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_FillColorRGB</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntPoint)</signature>
                        <name>set_MovePoint</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillAlpha</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillBlue</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillGray</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillGreen</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillRed</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>AForge.IntPoint</signature>
                        <name>movePoint</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>FillColorGray</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>FillColorRGB</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.IntPoint()</signature>
                        <name>MovePoint</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ChannelFiltering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange, AForge.IntRange, AForge.IntRange)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange, unsigned int8, bool, unsigned int8[])</signature>
                        <name>CalculateMap</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_Blue</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_BlueFillOutsideRange</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_FillBlue</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_FillGreen</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_FillRed</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_Green</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_GreenFillOutsideRange</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_Red</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_RedFillOutsideRange</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_Blue</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_BlueFillOutsideRange</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_FillBlue</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_FillGreen</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_FillRed</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_Green</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_GreenFillOutsideRange</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_Red</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_RedFillOutsideRange</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>blue</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>blueFillOutsideRange</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillB</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillG</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillR</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>green</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>greenFillOutsideRange</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>mapBlue</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>mapGreen</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>mapRed</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>red</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>redFillOutsideRange</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>Blue</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>BlueFillOutsideRange</name>
                    </property>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>FillBlue</name>
                    </property>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>FillGreen</name>
                    </property>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>FillRed</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>Green</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>GreenFillOutsideRange</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>Red</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>RedFillOutsideRange</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Closing</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage(AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Imaging.BitmapData)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, System.Drawing.Rectangle)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData, System.Drawing.Rectangle)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.Dilatation</signature>
                        <name>dilatation</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.Erosion</signature>
                        <name>errosion</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ColorFiltering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange, AForge.IntRange, AForge.IntRange)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_Blue</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.RGB()</signature>
                        <name>get_FillColor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_FillOutsideRange</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_Green</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_Red</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_Blue</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.RGB)</signature>
                        <name>set_FillColor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_FillOutsideRange</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_Green</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_Red</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>blue</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillB</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillG</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>fillOutsideRange</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillR</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>green</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>red</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>Blue</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.RGB()</signature>
                        <name>FillColor</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>FillOutsideRange</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>Green</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>Red</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ColorRemapping</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[], unsigned int8[], unsigned int8[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_BlueMap</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_GrayMap</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_GreenMap</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_RedMap</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>set_BlueMap</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>set_GrayMap</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>set_GreenMap</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>set_RedMap</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>blueMap</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>grayMap</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>greenMap</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>redMap</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>unsigned int8[]()</signature>
                        <name>BlueMap</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>unsigned int8[]()</signature>
                        <name>GrayMap</name>
                    </property>
                    <property>
                        <signature>unsigned int8[]()</signature>
                        <name>GreenMap</name>
                    </property>
                    <property>
                        <signature>unsigned int8[]()</signature>
                        <name>RedMap</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ConnectedComponentsLabeling</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.BlobCounterBase()</signature>
                        <name>get_BlobCounter</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color[]()</signature>
                        <name>get_ColorTable</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CoupledSizeFiltering</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_FilterBlobs</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxHeight</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxWidth</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinHeight</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinWidth</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ObjectCount</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.BlobCounterBase)</signature>
                        <name>set_BlobCounter</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color[])</signature>
                        <name>set_ColorTable</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CoupledSizeFiltering</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_FilterBlobs</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxHeight</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxWidth</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MinHeight</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MinWidth</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.BlobCounterBase</signature>
                        <name>blobCounter</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color[]</signature>
                        <name>colorTable</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Imaging.BlobCounterBase()</signature>
                        <name>BlobCounter</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color[]()</signature>
                        <name>ColorTable</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>CoupledSizeFiltering</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>FilterBlobs</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxHeight</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxWidth</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MinHeight</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MinWidth</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ObjectCount</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ConservativeSmoothing</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_KernelSize</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_KernelSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>size</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>KernelSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ContrastCorrection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Factor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Factor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.LevelsLinear</signature>
                        <name>baseFilter</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>factor</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Factor</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ContrastStretch</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Convolution</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32[0...,0...], int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Divisor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_DynamicDivisorForEdges</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32[0...,0...]()</signature>
                        <name>get_Kernel</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ProcessAlpha</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Threshold</name>
                    </method>
                    <method>
                        <signature>void(unsigned int16*, unsigned int16*, int32, int32, int32, int32, int32, int32)</signature>
                        <name>Process16bppImage</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8*, unsigned int8*, int32, int32, int32, int32, int32, int32, int32, int32, int32)</signature>
                        <name>Process24bppImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8*, unsigned int8*, int32, int32, int32, int32, int32, int32, int32, int32)</signature>
                        <name>Process32bppImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16*, unsigned int16*, int32, int32, int32, int32, int32, int32, int32)</signature>
                        <name>Process48bppImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int16*, unsigned int16*, int32, int32, int32, int32, int32, int32)</signature>
                        <name>Process64bppImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8*, unsigned int8*, int32, int32, int32, int32, int32, int32, int32, int32)</signature>
                        <name>Process8bppImage</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Divisor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_DynamicDivisorForEdges</name>
                    </method>
                    <method>
                        <signature>void(int32[0...,0...])</signature>
                        <name>set_Kernel</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ProcessAlpha</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Threshold</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>divisor</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>dynamicDivisorForEdges</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32[0...,0...]</signature>
                        <name>kernel</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>processAlpha</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>size</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>threshold</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Divisor</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>DynamicDivisorForEdges</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32[0...,0...]()</signature>
                        <name>Kernel</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ProcessAlpha</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Threshold</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.CornersMarker</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Imaging.ICornersDetector)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.ICornersDetector, System.Drawing.Color)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.ICornersDetector()</signature>
                        <name>get_Detector</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_MarkerColor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.ICornersDetector)</signature>
                        <name>set_Detector</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_MarkerColor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.ICornersDetector</signature>
                        <name>detector</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>markerColor</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Imaging.ICornersDetector()</signature>
                        <name>Detector</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>MarkerColor</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Crop</name>
                <methodlist>
                    <method>
                        <signature>void(System.Drawing.Rectangle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size(AForge.Imaging.UnmanagedImage)</signature>
                        <name>CalculateNewImageSize</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>get_Rectangle</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle)</signature>
                        <name>set_Rectangle</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Rectangle</signature>
                        <name>rect</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>Rectangle</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Difference</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitFormatTranslations</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.DifferenceEdgeDetector</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Dilatation</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int16[0...,0...]</signature>
                        <name>se</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>size</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Dilatation3x3</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Edges</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Erosion</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int16[0...,0...]</signature>
                        <name>se</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>size</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Erosion3x3</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ErrorDiffusionDithering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, unsigned int8*)</signature>
                        <name>Diffuse</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_ThresholdValue</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_ThresholdValue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>startX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>startY</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stopX</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stopY</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stride</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>threshold</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>x</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>y</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>ThresholdValue</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ErrorDiffusionToAdjacentNeighbors</name>
                <methodlist>
                    <method>
                        <signature>void(int32[][])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CalculateCoefficientsSum</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, unsigned int8*)</signature>
                        <name>Diffuse</name>
                    </method>
                    <method>
                        <signature>int32[][]()</signature>
                        <name>get_Coefficients</name>
                    </method>
                    <method>
                        <signature>void(int32[][])</signature>
                        <name>set_Coefficients</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32[][]</signature>
                        <name>coefficients</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>coefficientsSum</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32[][]()</signature>
                        <name>Coefficients</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.EuclideanColorFiltering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.RGB, int16)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.RGB()</signature>
                        <name>get_CenterColor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.RGB()</signature>
                        <name>get_FillColor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_FillOutside</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_Radius</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.RGB)</signature>
                        <name>set_CenterColor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.RGB)</signature>
                        <name>set_FillColor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_FillOutside</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_Radius</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.RGB</signature>
                        <name>center</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.RGB</signature>
                        <name>fill</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>fillOutside</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>radius</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Imaging.RGB()</signature>
                        <name>CenterColor</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.RGB()</signature>
                        <name>FillColor</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>FillOutside</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int16()</signature>
                        <name>Radius</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ExtractBiggestBlob</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage(AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Imaging.BitmapData)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint()</signature>
                        <name>get_BlobPosition</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_OriginalImage</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>set_OriginalImage</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.IntPoint</signature>
                        <name>blobPosition</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Bitmap</signature>
                        <name>originalImage</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.IntPoint()</signature>
                        <name>BlobPosition</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>OriginalImage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ExtractChannel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_Channel</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_Channel</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16</signature>
                        <name>channel</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int16()</signature>
                        <name>Channel</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ExtractNormalizedRGBChannel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_Channel</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_Channel</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16</signature>
                        <name>channel</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int16()</signature>
                        <name>Channel</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.FillHoles</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_CoupledSizeFiltering</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxHoleHeight</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxHoleWidth</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_CoupledSizeFiltering</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxHoleHeight</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxHoleWidth</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>coupledSizeFiltering</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxHoleHeight</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxHoleWidth</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>CoupledSizeFiltering</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxHoleHeight</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxHoleWidth</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.FilterIterator</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Imaging.Filters.IFilter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Filters.IFilter, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage(AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Imaging.BitmapData)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.Filters.IFilter()</signature>
                        <name>get_BaseFilter</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Iterations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Filters.IFilter)</signature>
                        <name>set_BaseFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Iterations</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.IFilter</signature>
                        <name>baseFilter</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>iterations</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Imaging.Filters.IFilter()</signature>
                        <name>BaseFilter</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Iterations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.FiltersSequence</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Filters.IFilter[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Filters.IFilter)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage(AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Imaging.BitmapData)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.Filters.IFilter(int32)</signature>
                        <name>get_Item</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>AForge.Imaging.Filters.IFilter(int32)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.FlatFieldCorrection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_BackgoundImage</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>get_UnmanagedBackgoundImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>set_BackgoundImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>set_UnmanagedBackgoundImage</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Bitmap</signature>
                        <name>backgroundImage</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.UnmanagedImage</signature>
                        <name>unmanagedBackgroundImage</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>BackgoundImage</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>UnmanagedBackgoundImage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.FloydSteinbergDithering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.GammaCorrection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Gamma</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Gamma</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>gamma</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>table</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>Gamma</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.GaussianBlur</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float64, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateFilter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Sigma</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Size</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Sigma</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Size</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>sigma</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>size</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>Sigma</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Size</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.GaussianSharpen</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float64, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateFilter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Sigma</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Size</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Sigma</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Size</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>sigma</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>size</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>Sigma</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Size</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Grayscale</name>
                <methodlist>
                    <method>
                        <signature>void(float64, float64, float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>BlueCoefficient</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>GreenCoefficient</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>RedCoefficient</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Grayscale/CommonAlgorithms</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.Grayscale</signature>
                        <name>BT709</name>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.Grayscale</signature>
                        <name>RMY</name>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.Grayscale</signature>
                        <name>Y</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.GrayscaleBT709</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.GrayscaleRMY</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.GrayscaleToRGB</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.GrayscaleY</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.HistogramEqualization</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](int32[], int64)</signature>
                        <name>Equalize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.HitAndMiss</name>
                <methodlist>
                    <method>
                        <signature>void(int16[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16[0...,0...], AForge.Imaging.Filters.HitAndMiss/Modes)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.Filters.HitAndMiss/Modes()</signature>
                        <name>get_Mode</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Filters.HitAndMiss/Modes)</signature>
                        <name>set_Mode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.HitAndMiss/Modes</signature>
                        <name>mode</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int16[0...,0...]</signature>
                        <name>se</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>size</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.Filters.HitAndMiss/Modes()</signature>
                        <name>Mode</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.HitAndMiss/Modes</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.HitAndMiss/Modes</signature>
                        <name>HitAndMiss</name>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.HitAndMiss/Modes</signature>
                        <name>Thickening</name>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.HitAndMiss/Modes</signature>
                        <name>Thinning</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.HomogenityEdgeDetector</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.HorizontalRunLengthSmoothing</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxGapSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ProcessGapsWithImageBorders</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxGapSize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ProcessGapsWithImageBorders</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxGapSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>processGapsWithImageBorders</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxGapSize</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ProcessGapsWithImageBorders</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.HSLFiltering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange, AForge.Range, AForge.Range)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.HSL()</signature>
                        <name>get_FillColor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_FillOutsideRange</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_Hue</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_Luminance</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_Saturation</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UpdateHue</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UpdateLuminance</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UpdateSaturation</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.HSL)</signature>
                        <name>set_FillColor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_FillOutsideRange</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_Hue</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range)</signature>
                        <name>set_Luminance</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range)</signature>
                        <name>set_Saturation</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UpdateHue</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UpdateLuminance</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UpdateSaturation</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>fillH</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>fillL</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>fillOutsideRange</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>fillS</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>hue</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Range</signature>
                        <name>luminance</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Range</signature>
                        <name>saturation</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>updateH</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>updateL</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>updateS</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Imaging.HSL()</signature>
                        <name>FillColor</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>FillOutsideRange</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>Hue</name>
                    </property>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>Luminance</name>
                    </property>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>Saturation</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UpdateHue</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UpdateLuminance</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UpdateSaturation</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.HSLLinear</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_InLuminance</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_InSaturation</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_OutLuminance</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_OutSaturation</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range)</signature>
                        <name>set_InLuminance</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range)</signature>
                        <name>set_InSaturation</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range)</signature>
                        <name>set_OutLuminance</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range)</signature>
                        <name>set_OutSaturation</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>AForge.Range</signature>
                        <name>inLuminance</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Range</signature>
                        <name>inSaturation</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Range</signature>
                        <name>outLuminance</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Range</signature>
                        <name>outSaturation</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>InLuminance</name>
                    </property>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>InSaturation</name>
                    </property>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>OutLuminance</name>
                    </property>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>OutSaturation</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.HueModifier</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Hue</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Hue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>hue</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Hue</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.IFilter</name>
                <methodlist>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage(AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Imaging.BitmapData)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.IFilterInformation</name>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.IInPlaceFilter</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.IInPlacePartialFilter</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, System.Drawing.Rectangle)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData, System.Drawing.Rectangle)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ImageWarp</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.IntPoint[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint[0...,0...]()</signature>
                        <name>get_WarpMap</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntPoint[0...,0...])</signature>
                        <name>set_WarpMap</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.IntPoint[0...,0...]</signature>
                        <name>warpMap</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.IntPoint[0...,0...]()</signature>
                        <name>WarpMap</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Intersect</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitFormatTranslations</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Invert</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.IterativeThreshold</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>CalculateThreshold</name>
                    </method>
                    <method>
                        <signature>int32(System.Drawing.Bitmap, System.Drawing.Rectangle)</signature>
                        <name>CalculateThreshold</name>
                    </method>
                    <method>
                        <signature>int32(System.Drawing.Imaging.BitmapData, System.Drawing.Rectangle)</signature>
                        <name>CalculateThreshold</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinimumError</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MinimumError</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>minError</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>MinimumError</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.JarvisJudiceNinkeDithering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Jitter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Radius</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Radius</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>radius</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Random</signature>
                        <name>rand</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Radius</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.LevelsLinear</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange, AForge.IntRange, unsigned int8[])</signature>
                        <name>CalculateMap</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_InBlue</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_InGray</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_InGreen</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_InRed</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_OutBlue</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_OutGray</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_OutGreen</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_OutRed</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_InBlue</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_InGray</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_InGreen</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_Input</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_InRed</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_OutBlue</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_OutGray</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_OutGreen</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_Output</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_OutRed</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>inBlue</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>inGreen</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>inRed</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>mapBlue</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>mapGreen</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>mapRed</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>outBlue</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>outGreen</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>outRed</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>InBlue</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>InGray</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>InGreen</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>Input</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>InRed</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>OutBlue</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>OutGray</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>OutGreen</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>Output</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>OutRed</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.LevelsLinear16bpp</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange, AForge.IntRange, unsigned int16[])</signature>
                        <name>CalculateMap</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_InBlue</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_InGray</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_InGreen</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_InRed</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_OutBlue</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_OutGray</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_OutGreen</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange()</signature>
                        <name>get_OutRed</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_InBlue</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_InGray</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_InGreen</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_Input</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_InRed</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_OutBlue</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_OutGray</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_OutGreen</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_Output</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntRange)</signature>
                        <name>set_OutRed</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>inBlue</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>inGreen</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>inRed</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int16[]</signature>
                        <name>mapBlue</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int16[]</signature>
                        <name>mapGreen</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int16[]</signature>
                        <name>mapRed</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>outBlue</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>outGreen</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>AForge.IntRange</signature>
                        <name>outRed</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>InBlue</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>InGray</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>InGreen</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>Input</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>InRed</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>OutBlue</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>OutGray</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>OutGreen</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>Output</name>
                    </property>
                    <property>
                        <signature>AForge.IntRange()</signature>
                        <name>OutRed</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.MaskedFilter</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Imaging.Filters.IFilter, AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Filters.IFilter, System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Filters.IFilter, unsigned int8[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.Filters.IFilter()</signature>
                        <name>get_BaseFilter</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>unsigned int8[0...,0...]()</signature>
                        <name>get_Mask</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_MaskImage</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>get_UnmanagedMaskImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle, unsigned int8*, int32)</signature>
                        <name>ProcessImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Filters.IFilter)</signature>
                        <name>set_BaseFilter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8[0...,0...])</signature>
                        <name>set_Mask</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>set_MaskImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>set_UnmanagedMaskImage</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.IFilter</signature>
                        <name>baseFilter</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[0...,0...]</signature>
                        <name>mask</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Bitmap</signature>
                        <name>maskImage</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.UnmanagedImage</signature>
                        <name>unmanagedMaskImage</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Imaging.Filters.IFilter()</signature>
                        <name>BaseFilter</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>unsigned int8[0...,0...]()</signature>
                        <name>Mask</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>MaskImage</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>UnmanagedMaskImage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Mean</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Median</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Size</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Size</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>size</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Size</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Merge</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitFormatTranslations</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Mirror</name>
                <methodlist>
                    <method>
                        <signature>void(bool, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MirrorX</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MirrorY</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MirrorX</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MirrorY</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>mirrorX</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>mirrorY</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>MirrorX</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>MirrorY</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Morph</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_SourcePercent</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitFormatTranslations</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_SourcePercent</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>sourcePercent</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>SourcePercent</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.MoveTowards</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_StepSize</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitFormatTranslations</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_StepSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stepSize</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>StepSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.OilPainting</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BrushSize</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_BrushSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>brushSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>BrushSize</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Opening</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage(AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Imaging.BitmapData)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>Apply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, System.Drawing.Rectangle)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData, System.Drawing.Rectangle)</signature>
                        <name>ApplyInPlace</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.Dilatation</signature>
                        <name>dilatation</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.Erosion</signature>
                        <name>errosion</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.OrderedDithering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>cols</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[0...,0...]</signature>
                        <name>matrix</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>rows</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.OtsuThreshold</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>CalculateThreshold</name>
                    </method>
                    <method>
                        <signature>int32(System.Drawing.Bitmap, System.Drawing.Rectangle)</signature>
                        <name>CalculateThreshold</name>
                    </method>
                    <method>
                        <signature>int32(System.Drawing.Imaging.BitmapData, System.Drawing.Rectangle)</signature>
                        <name>CalculateThreshold</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ThresholdValue</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.Threshold</signature>
                        <name>thresholdFilter</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ThresholdValue</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Pixellate</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PixelHeight</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PixelWidth</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_PixelHeight</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_PixelSize</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_PixelWidth</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pixelHeight</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pixelWidth</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>PixelHeight</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>PixelSize</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>PixelWidth</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.PointedColorFloodFill</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>CheckGrayPixel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(unsigned int8*)</signature>
                        <name>CheckRGBPixel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8*(int32, int32)</signature>
                        <name>CoordsToPointerGray</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>unsigned int8*(int32, int32)</signature>
                        <name>CoordsToPointerRGB</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_FillColor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint()</signature>
                        <name>get_StartingPoint</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_Tolerance</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntPoint)</signature>
                        <name>LinearFloodFill4Gray</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(AForge.IntPoint)</signature>
                        <name>LinearFloodFill4RGB</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_FillColor</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntPoint)</signature>
                        <name>set_StartingPoint</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_Tolerance</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool[0...,0...]</signature>
                        <name>checkedPixels</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillB</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillG</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fillR</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>maxB</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>maxG</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>maxR</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>minB</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>minG</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>minR</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>unsigned int8*</signature>
                        <name>scan0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.IntPoint</signature>
                        <name>startingPoint</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>startX</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>startY</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stopX</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stopY</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stride</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>tolerance</name>
                        <newname>r</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>FillColor</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.IntPoint()</signature>
                        <name>StartingPoint</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>Tolerance</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.PointedMeanFloodFill</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>CheckGrayPixel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(unsigned int8*)</signature>
                        <name>CheckRGBPixel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8*(int32, int32)</signature>
                        <name>CoordsToPointerGray</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>unsigned int8*(int32, int32)</signature>
                        <name>CoordsToPointerRGB</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint()</signature>
                        <name>get_StartingPoint</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_Tolerance</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>LinearFloodFill4Gray</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>LinearFloodFill4RGB</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntPoint)</signature>
                        <name>set_StartingPoint</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_Tolerance</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool[0...,0...]</signature>
                        <name>checkedPixels</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>maxB</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>maxG</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>maxR</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>meanB</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>meanG</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>meanR</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>minB</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>minG</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>minR</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pixelsCount</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>unsigned int8*</signature>
                        <name>scan0</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.IntPoint</signature>
                        <name>startingPoint</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>startX</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>startY</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stopX</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stopY</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stride</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>tolerance</name>
                        <newname>s</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.IntPoint()</signature>
                        <name>StartingPoint</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>Tolerance</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.QuadrilateralTransformation</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CalculateDestinationSize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Size(AForge.Imaging.UnmanagedImage)</signature>
                        <name>CalculateNewImageSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AutomaticSizeCalculaton</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NewHeight</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NewWidth</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;()</signature>
                        <name>get_SourceQuadrilateral</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseInterpolation</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AutomaticSizeCalculaton</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NewHeight</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NewWidth</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>set_SourceQuadrilateral</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseInterpolation</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>automaticSizeCalculaton</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>newHeight</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>newWidth</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;</signature>
                        <name>sourceQuadrilateral</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>useInterpolation</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AutomaticSizeCalculaton</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NewHeight</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NewWidth</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;()</signature>
                        <name>SourceQuadrilateral</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseInterpolation</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.QuadrilateralTransformationBilinear</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size(AForge.Imaging.UnmanagedImage)</signature>
                        <name>CalculateNewImageSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AutomaticSizeCalculaton</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NewHeight</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NewWidth</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;()</signature>
                        <name>get_SourceCorners</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AutomaticSizeCalculaton</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NewHeight</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NewWidth</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>set_SourceCorners</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.SimpleQuadrilateralTransformation</signature>
                        <name>baseFilter</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AutomaticSizeCalculaton</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NewHeight</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NewWidth</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;()</signature>
                        <name>SourceCorners</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.QuadrilateralTransformationNearestNeighbor</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size(AForge.Imaging.UnmanagedImage)</signature>
                        <name>CalculateNewImageSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AutomaticSizeCalculaton</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NewHeight</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NewWidth</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;()</signature>
                        <name>get_SourceCorners</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AutomaticSizeCalculaton</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NewHeight</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NewWidth</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>set_SourceCorners</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.SimpleQuadrilateralTransformation</signature>
                        <name>baseFilter</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AutomaticSizeCalculaton</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NewHeight</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NewWidth</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;()</signature>
                        <name>SourceCorners</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.QuadTransformationCalcs</name>
                <newname>av</newname>
                <methodlist>
                    <method>
                        <signature>float64[0...,0...](float64[0...,0...])</signature>
                        <name>AdjugateMatrix</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64(float64, float64, float64, float64)</signature>
                        <name>Det2</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64[0...,0...](System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>MapQuadToQuad</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64[0...,0...](System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>MapSquareToQuad</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64[0...,0...](float64[0...,0...], float64[0...,0...])</signature>
                        <name>MultiplyMatrix</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>TOLERANCE</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ReplaceChannel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16, AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16, System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_Channel</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_ChannelImage</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>get_UnmanagedChannelImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_Channel</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>set_ChannelImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>set_UnmanagedChannelImage</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16</signature>
                        <name>channel</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Bitmap</signature>
                        <name>channelImage</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.UnmanagedImage</signature>
                        <name>unmanagedChannelImage</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int16()</signature>
                        <name>Channel</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>ChannelImage</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>UnmanagedChannelImage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ResizeBicubic</name>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ResizeBilinear</name>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ResizeNearestNeighbor</name>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.RotateBicubic</name>
                <methodlist>
                    <method>
                        <signature>void(float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float64, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.RotateBilinear</name>
                <methodlist>
                    <method>
                        <signature>void(float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float64, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.RotateChannels</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.RotateNearestNeighbor</name>
                <methodlist>
                    <method>
                        <signature>void(float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float64, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter16bpc</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter8bpc</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.SaltAndPepperNoise</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_NoiseAmount</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_NoiseAmount</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>noiseAmount</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Random</signature>
                        <name>rand</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>NoiseAmount</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.SaturationCorrection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_AdjustValue</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_AdjustValue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>adjustValue</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.HSLLinear</signature>
                        <name>baseFilter</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>AdjustValue</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Sepia</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Sharpen</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Shrink</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size(AForge.Imaging.UnmanagedImage)</signature>
                        <name>CalculateNewImageSize</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_ColorToRemove</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_ColorToRemove</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>colorToRemove</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>minX</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>minY</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>ColorToRemove</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.SierraDithering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.SimplePosterization</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Filters.SimplePosterization/PosterizationFillingType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.Filters.SimplePosterization/PosterizationFillingType()</signature>
                        <name>get_FillingType</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_PosterizationInterval</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Filters.SimplePosterization/PosterizationFillingType)</signature>
                        <name>set_FillingType</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_PosterizationInterval</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.SimplePosterization/PosterizationFillingType</signature>
                        <name>fillingType</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>posterizationInterval</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Imaging.Filters.SimplePosterization/PosterizationFillingType()</signature>
                        <name>FillingType</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>PosterizationInterval</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.SimplePosterization/PosterizationFillingType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.SimplePosterization/PosterizationFillingType</signature>
                        <name>Average</name>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.SimplePosterization/PosterizationFillingType</signature>
                        <name>Max</name>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.SimplePosterization/PosterizationFillingType</signature>
                        <name>Min</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.SimpleQuadrilateralTransformation</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CalculateDestinationSize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Size(AForge.Imaging.UnmanagedImage)</signature>
                        <name>CalculateNewImageSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_AutomaticSizeCalculaton</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NewHeight</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NewWidth</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;()</signature>
                        <name>get_SourceQuadrilateral</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseInterpolation</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_AutomaticSizeCalculaton</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NewHeight</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NewWidth</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>set_SourceQuadrilateral</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseInterpolation</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>automaticSizeCalculaton</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>newHeight</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>newWidth</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;</signature>
                        <name>sourceQuadrilateral</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>useInterpolation</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>AutomaticSizeCalculaton</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NewHeight</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NewWidth</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;()</signature>
                        <name>SourceQuadrilateral</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseInterpolation</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.SimpleSkeletonization</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_Background</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_Foreground</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_Background</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_Foreground</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>bg</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>fg</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>Background</name>
                    </property>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>Foreground</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.SISThreshold</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>CalculateThreshold</name>
                    </method>
                    <method>
                        <signature>int32(System.Drawing.Bitmap, System.Drawing.Rectangle)</signature>
                        <name>CalculateThreshold</name>
                    </method>
                    <method>
                        <signature>int32(System.Drawing.Imaging.BitmapData, System.Drawing.Rectangle)</signature>
                        <name>CalculateThreshold</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ThresholdValue</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.Threshold</signature>
                        <name>thresholdFilter</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ThresholdValue</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.SobelEdgeDetector</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ScaleIntensity</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ScaleIntensity</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>scaleIntensity</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ScaleIntensity</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.StereoAnaglyph</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Filters.StereoAnaglyph/Algorithm)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.Filters.StereoAnaglyph/Algorithm()</signature>
                        <name>get_AnaglyphAlgorithm</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Filters.StereoAnaglyph/Algorithm)</signature>
                        <name>set_AnaglyphAlgorithm</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.StereoAnaglyph/Algorithm</signature>
                        <name>anaglyphAlgorithm</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Imaging.Filters.StereoAnaglyph/Algorithm()</signature>
                        <name>AnaglyphAlgorithm</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.StereoAnaglyph/Algorithm</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.StereoAnaglyph/Algorithm</signature>
                        <name>ColorAnaglyph</name>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.StereoAnaglyph/Algorithm</signature>
                        <name>GrayAnaglyph</name>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.StereoAnaglyph/Algorithm</signature>
                        <name>HalfColorAnaglyph</name>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.StereoAnaglyph/Algorithm</signature>
                        <name>OptimizedAnaglyph</name>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.StereoAnaglyph/Algorithm</signature>
                        <name>TrueAnaglyph</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.StuckiDithering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Subtract</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitFormatTranslations</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.TexturedFilter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Textures.ITextureGenerator, AForge.Imaging.Filters.IFilter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Textures.ITextureGenerator, AForge.Imaging.Filters.IFilter, AForge.Imaging.Filters.IFilter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32[0...,0...], AForge.Imaging.Filters.IFilter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32[0...,0...], AForge.Imaging.Filters.IFilter, AForge.Imaging.Filters.IFilter)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.Filters.IFilter()</signature>
                        <name>get_Filter1</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.Filters.IFilter()</signature>
                        <name>get_Filter2</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_FilterLevel</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PreserveLevel</name>
                    </method>
                    <method>
                        <signature>float32[0...,0...]()</signature>
                        <name>get_Texture</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.Textures.ITextureGenerator()</signature>
                        <name>get_TextureGenerator</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Filters.IFilter)</signature>
                        <name>set_Filter1</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Filters.IFilter)</signature>
                        <name>set_Filter2</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_FilterLevel</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PreserveLevel</name>
                    </method>
                    <method>
                        <signature>void(float32[0...,0...])</signature>
                        <name>set_Texture</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Textures.ITextureGenerator)</signature>
                        <name>set_TextureGenerator</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.Filters.IFilter</signature>
                        <name>filter1</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.IFilter</signature>
                        <name>filter2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>filterLevel</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>preserveLevel</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>float32[0...,0...]</signature>
                        <name>texture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Textures.ITextureGenerator</signature>
                        <name>textureGenerator</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Imaging.Filters.IFilter()</signature>
                        <name>Filter1</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.Filters.IFilter()</signature>
                        <name>Filter2</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>FilterLevel</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>PreserveLevel</name>
                    </property>
                    <property>
                        <signature>float32[0...,0...]()</signature>
                        <name>Texture</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.Textures.ITextureGenerator()</signature>
                        <name>TextureGenerator</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.TexturedMerge</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Textures.ITextureGenerator)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>float32[0...,0...]()</signature>
                        <name>get_Texture</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.Textures.ITextureGenerator()</signature>
                        <name>get_TextureGenerator</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(float32[0...,0...])</signature>
                        <name>set_Texture</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Textures.ITextureGenerator)</signature>
                        <name>set_TextureGenerator</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>float32[0...,0...]</signature>
                        <name>texture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Textures.ITextureGenerator</signature>
                        <name>textureGenerator</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>float32[0...,0...]()</signature>
                        <name>Texture</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.Textures.ITextureGenerator()</signature>
                        <name>TextureGenerator</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Texturer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Textures.ITextureGenerator)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Textures.ITextureGenerator, float64, float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32[0...,0...], float64, float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_FilterLevel</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_PreserveLevel</name>
                    </method>
                    <method>
                        <signature>float32[0...,0...]()</signature>
                        <name>get_Texture</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.Textures.ITextureGenerator()</signature>
                        <name>get_TextureGenerator</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_FilterLevel</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_PreserveLevel</name>
                    </method>
                    <method>
                        <signature>void(float32[0...,0...])</signature>
                        <name>set_Texture</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.Textures.ITextureGenerator)</signature>
                        <name>set_TextureGenerator</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>filterLevel</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>preserveLevel</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float32[0...,0...]</signature>
                        <name>texture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Textures.ITextureGenerator</signature>
                        <name>textureGenerator</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>FilterLevel</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>PreserveLevel</name>
                    </property>
                    <property>
                        <signature>float32[0...,0...]()</signature>
                        <name>Texture</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.Textures.ITextureGenerator()</signature>
                        <name>TextureGenerator</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.Threshold</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ThresholdValue</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ThresholdValue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>threshold</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>ThresholdValue</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ThresholdedDifference</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Threshold</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_WhitePixelsCount</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Threshold</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>threshold</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>whitePixelsCount</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Threshold</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>WhitePixelsCount</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ThresholdedEuclideanDifference</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Threshold</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_WhitePixelsCount</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Threshold</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>threshold</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>whitePixelsCount</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Threshold</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>WhitePixelsCount</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.ThresholdWithCarry</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>get_ThresholdValue</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>set_ThresholdValue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>threshold</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>unsigned int8()</signature>
                        <name>ThresholdValue</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.TopHat</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.Opening</signature>
                        <name>opening</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.Filters.Subtract</signature>
                        <name>subtract</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.TransformFromPolar</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size(AForge.Imaging.UnmanagedImage)</signature>
                        <name>CalculateNewImageSize</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_CirlceDepth</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MapBackwards</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MapFromTop</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size()</signature>
                        <name>get_NewSize</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_OffsetAngle</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseOriginalImageSize</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_CirlceDepth</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MapBackwards</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MapFromTop</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Size)</signature>
                        <name>set_NewSize</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_OffsetAngle</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseOriginalImageSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>circleDepth</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>mapBackwards</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>mapFromTop</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Size</signature>
                        <name>newSize</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>offsetAngle</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>Pi2</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>PiHalf</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>useOriginalImageSize</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>CirlceDepth</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>MapBackwards</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>MapFromTop</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Size()</signature>
                        <name>NewSize</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>OffsetAngle</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseOriginalImageSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.TransformToPolar</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size(AForge.Imaging.UnmanagedImage)</signature>
                        <name>CalculateNewImageSize</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_CirlceDepth</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_FillColor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MapBackwards</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_MapFromTop</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size()</signature>
                        <name>get_NewSize</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_OffsetAngle</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseOriginalImageSize</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_CirlceDepth</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_FillColor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MapBackwards</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_MapFromTop</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Size)</signature>
                        <name>set_NewSize</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_OffsetAngle</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseOriginalImageSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>circleDepth</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>fillColor</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>mapBackwards</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>mapFromTop</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Size</signature>
                        <name>newSize</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>offsetAngle</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>Pi2</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>PiHalf</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>useOriginalImageSize</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>CirlceDepth</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>FillColor</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>MapBackwards</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>MapFromTop</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Size()</signature>
                        <name>NewSize</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>OffsetAngle</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseOriginalImageSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.VerticalRunLengthSmoothing</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxGapSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ProcessGapsWithImageBorders</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxGapSize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ProcessGapsWithImageBorders</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxGapSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>processGapsWithImageBorders</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxGapSize</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ProcessGapsWithImageBorders</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.WaterWave</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_HorizontalWavesAmplitude</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_HorizontalWavesCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VerticalWavesAmplitude</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_VerticalWavesCount</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_HorizontalWavesAmplitude</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_HorizontalWavesCount</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_VerticalWavesAmplitude</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_VerticalWavesCount</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>xWavesAmplitude</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>xWavesCount</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>yWavesAmplitude</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>yWavesCount</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>HorizontalWavesAmplitude</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>HorizontalWavesCount</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>VerticalWavesAmplitude</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>VerticalWavesCount</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.YCbCrExtractChannel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_Channel</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_Channel</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16</signature>
                        <name>channel</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int16()</signature>
                        <name>Channel</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.YCbCrFiltering</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range, AForge.Range, AForge.Range)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_Cb</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_Cr</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.YCbCr()</signature>
                        <name>get_FillColor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_FillOutsideRange</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UpdateCb</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UpdateCr</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UpdateY</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_Y</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range)</signature>
                        <name>set_Cb</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range)</signature>
                        <name>set_Cr</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.YCbCr)</signature>
                        <name>set_FillColor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_FillOutsideRange</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UpdateCb</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UpdateCr</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UpdateY</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range)</signature>
                        <name>set_Y</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Range</signature>
                        <name>cbRange</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Range</signature>
                        <name>crRange</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>fillCb</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>fillCr</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>fillOutsideRange</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>fillY</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>updateCb</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>updateCr</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>updateY</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>AForge.Range</signature>
                        <name>yRange</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>Cb</name>
                    </property>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>Cr</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.YCbCr()</signature>
                        <name>FillColor</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>FillOutsideRange</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UpdateCb</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UpdateCr</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UpdateY</name>
                    </property>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>Y</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.YCbCrLinear</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_InCb</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_InCr</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_InY</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_OutCb</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_OutCr</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_OutY</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range)</signature>
                        <name>set_InCb</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range)</signature>
                        <name>set_InCr</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range)</signature>
                        <name>set_InY</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range)</signature>
                        <name>set_OutCb</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range)</signature>
                        <name>set_OutCr</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range)</signature>
                        <name>set_OutY</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>AForge.Range</signature>
                        <name>inCb</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Range</signature>
                        <name>inCr</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Range</signature>
                        <name>inY</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Range</signature>
                        <name>outCb</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>AForge.Range</signature>
                        <name>outCr</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>AForge.Range</signature>
                        <name>outY</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>InCb</name>
                    </property>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>InCr</name>
                    </property>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>InY</name>
                    </property>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>OutCb</name>
                    </property>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>OutCr</name>
                    </property>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>OutY</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Filters.YCbCrReplaceChannel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16, AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int16, System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_Channel</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_ChannelImage</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>get_FormatTranslations</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>get_UnmanagedChannelImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessFilter</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_Channel</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>set_ChannelImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>set_UnmanagedChannelImage</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16</signature>
                        <name>channel</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Bitmap</signature>
                        <name>channelImage</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;</signature>
                        <name>formatTranslations</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>AForge.Imaging.UnmanagedImage</signature>
                        <name>unmanagedChannelImage</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int16()</signature>
                        <name>Channel</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>ChannelImage</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.PixelFormat&gt;()</signature>
                        <name>FormatTranslations</name>
                    </property>
                    <property>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>UnmanagedChannelImage</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.HorizontalIntensityStatistics</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>get_Blue</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>get_Gray</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>get_Green</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsGrayscale</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>get_Red</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessImage</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Math.Histogram</signature>
                        <name>blue</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Histogram</signature>
                        <name>gray</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Histogram</signature>
                        <name>green</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Histogram</signature>
                        <name>red</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>Blue</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>Gray</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>Green</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsGrayscale</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>Red</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.HoughCircle</name>
                <methodlist>
                    <method>
                        <signature>void(int32, int32, int32, int16, float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>CompareTo</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16</signature>
                        <name>Intensity</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Radius</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>RelativeIntensity</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>X</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Y</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.HoughCircleTransformation</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CollectCircles</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>DrawHoughCircle</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CirclesCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_LocalPeakRadius</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_MaxIntensity</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_MinCircleIntensity</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.HoughCircle[](float64)</signature>
                        <name>GetCirclesByRelativeIntensity</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.HoughCircle[](int32)</signature>
                        <name>GetMostIntensiveCircles</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_LocalPeakRadius</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_MinCircleIntensity</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, int32, int32)</signature>
                        <name>SetHoughCirclePoints</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>SetHoughPoint</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>ToBitmap</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>circles</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>height</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int16[0...,0...]</signature>
                        <name>houghMap</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>localPeakRadius</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>maxMapIntensity</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>minCircleIntensity</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>radiusToDetect</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>width</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>CirclesCount</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>LocalPeakRadius</name>
                    </property>
                    <property>
                        <signature>int16()</signature>
                        <name>MaxIntensity</name>
                    </property>
                    <property>
                        <signature>int16()</signature>
                        <name>MinCircleIntensity</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.HoughLine</name>
                <methodlist>
                    <method>
                        <signature>void(float64, int16, int16, float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>CompareTo</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16</signature>
                        <name>Intensity</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>Radius</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>RelativeIntensity</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>Theta</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.HoughLineTransformation</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CollectLines</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_LinesCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_LocalPeakRadius</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_MaxIntensity</name>
                    </method>
                    <method>
                        <signature>int16()</signature>
                        <name>get_MinLineIntensity</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_StepsPerDegree</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.HoughLine[](float64)</signature>
                        <name>GetLinesByRelativeIntensity</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.HoughLine[](int32)</signature>
                        <name>GetMostIntensiveLines</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, System.Drawing.Rectangle)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData, System.Drawing.Rectangle)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_LocalPeakRadius</name>
                    </method>
                    <method>
                        <signature>void(int16)</signature>
                        <name>set_MinLineIntensity</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_StepsPerDegree</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>ToBitmap</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64[]</signature>
                        <name>cosMap</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>houghHeight</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int16[0...,0...]</signature>
                        <name>houghMap</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>lines</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>localPeakRadius</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>maxMapIntensity</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>minLineIntensity</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>float64[]</signature>
                        <name>sinMap</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stepsPerDegree</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>thetaStep</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>LinesCount</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>LocalPeakRadius</name>
                    </property>
                    <property>
                        <signature>int16()</signature>
                        <name>MaxIntensity</name>
                    </property>
                    <property>
                        <signature>int16()</signature>
                        <name>MinLineIntensity</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>StepsPerDegree</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.HSL</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, float32, float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.HSL(AForge.Imaging.RGB)</signature>
                        <name>FromRGB</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.RGB, AForge.Imaging.HSL)</signature>
                        <name>FromRGB</name>
                    </method>
                    <method>
                        <signature>float32(float32, float32, float32)</signature>
                        <name>Hue_2_RGB</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>AForge.Imaging.RGB()</signature>
                        <name>ToRGB</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.HSL, AForge.Imaging.RGB)</signature>
                        <name>ToRGB</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>Hue</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>Luminance</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>Saturation</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.IBlobsFilter</name>
                <methodlist>
                    <method>
                        <signature>bool(AForge.Imaging.Blob)</signature>
                        <name>Check</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.IBlockMatching</name>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.Imaging.BlockMatch&gt;(AForge.Imaging.UnmanagedImage, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.Imaging.BlockMatch&gt;(System.Drawing.Bitmap, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, System.Drawing.Bitmap)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.Imaging.BlockMatch&gt;(System.Drawing.Imaging.BitmapData, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, System.Drawing.Imaging.BitmapData)</signature>
                        <name>ProcessImage</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ICornersDetector</name>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Drawing.Bitmap)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Drawing.Imaging.BitmapData)</signature>
                        <name>ProcessImage</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Image</name>
                <methodlist>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap, System.Drawing.Imaging.PixelFormat)</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Imaging.BitmapData)</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>Convert16bppTo8bpp</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>Convert8bppTo16bpp</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(int32, int32)</signature>
                        <name>CreateGrayscaleImage</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap&amp;)</signature>
                        <name>FormatImage</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(string)</signature>
                        <name>FromFile</name>
                    </method>
                    <method>
                        <signature>bool(System.Drawing.Bitmap)</signature>
                        <name>IsGrayscale</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>SetGrayscalePalette</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ImageStatistics</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, unsigned int8[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, unsigned int8[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.PixelFormat, System.Drawing.Size, System.Drawing.Size)</signature>
                        <name>CheckMaskProperties</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.PixelFormat)</signature>
                        <name>CheckSourceFormat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>get_Blue</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>get_BlueWithoutBlack</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>get_Gray</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>get_GrayWithoutBlack</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>get_Green</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>get_GreenWithoutBlack</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsGrayscale</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PixelsCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PixelsCountWithoutBlack</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>get_Red</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>get_RedWithoutBlack</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, unsigned int8*, int32)</signature>
                        <name>ProcessImage</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Math.Histogram</signature>
                        <name>blue</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Histogram</signature>
                        <name>blueWithoutBlack</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Histogram</signature>
                        <name>gray</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Histogram</signature>
                        <name>grayWithoutBlack</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Histogram</signature>
                        <name>green</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Histogram</signature>
                        <name>greenWithoutBlack</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pixels</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pixelsWithoutBlack</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Histogram</signature>
                        <name>red</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Histogram</signature>
                        <name>redWithoutBlack</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>Blue</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>BlueWithoutBlack</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>Gray</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>GrayWithoutBlack</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>Green</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>GreenWithoutBlack</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsGrayscale</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>PixelsCount</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>PixelsCountWithoutBlack</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>Red</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>RedWithoutBlack</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ImageStatisticsHSL</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, unsigned int8[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, unsigned int8[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.PixelFormat, System.Drawing.Size, System.Drawing.Size)</signature>
                        <name>CheckMaskProperties</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.PixelFormat)</signature>
                        <name>CheckSourceFormat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>get_Luminance</name>
                    </method>
                    <method>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>get_LuminanceWithoutBlack</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PixelsCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PixelsCountWithoutBlack</name>
                    </method>
                    <method>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>get_Saturation</name>
                    </method>
                    <method>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>get_SaturationWithoutBlack</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, unsigned int8*, int32)</signature>
                        <name>ProcessImage</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Math.ContinuousHistogram</signature>
                        <name>luminance</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.ContinuousHistogram</signature>
                        <name>luminanceWithoutBlack</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pixels</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pixelsWithoutBlack</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.ContinuousHistogram</signature>
                        <name>saturation</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.ContinuousHistogram</signature>
                        <name>saturationWithoutBlack</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>Luminance</name>
                    </property>
                    <property>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>LuminanceWithoutBlack</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>PixelsCount</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>PixelsCountWithoutBlack</name>
                    </property>
                    <property>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>Saturation</name>
                    </property>
                    <property>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>SaturationWithoutBlack</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ImageStatisticsYCbCr</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, unsigned int8[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap, unsigned int8[0...,0...])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.PixelFormat, System.Drawing.Size, System.Drawing.Size)</signature>
                        <name>CheckMaskProperties</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.PixelFormat)</signature>
                        <name>CheckSourceFormat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>get_Cb</name>
                    </method>
                    <method>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>get_CbWithoutBlack</name>
                    </method>
                    <method>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>get_Cr</name>
                    </method>
                    <method>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>get_CrWithoutBlack</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PixelsCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_PixelsCountWithoutBlack</name>
                    </method>
                    <method>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>get_Y</name>
                    </method>
                    <method>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>get_YWithoutBlack</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage, unsigned int8*, int32)</signature>
                        <name>ProcessImage</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Math.ContinuousHistogram</signature>
                        <name>cbHistogram</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.ContinuousHistogram</signature>
                        <name>cbHistogramWithoutBlack</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.ContinuousHistogram</signature>
                        <name>crHistogram</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.ContinuousHistogram</signature>
                        <name>crHistogramWithoutBlack</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pixels</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pixelsWithoutBlack</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.ContinuousHistogram</signature>
                        <name>yHistogram</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.ContinuousHistogram</signature>
                        <name>yHistogramWithoutBlack</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>Cb</name>
                    </property>
                    <property>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>CbWithoutBlack</name>
                    </property>
                    <property>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>Cr</name>
                    </property>
                    <property>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>CrWithoutBlack</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>PixelsCount</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>PixelsCountWithoutBlack</name>
                    </property>
                    <property>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>Y</name>
                    </property>
                    <property>
                        <signature>AForge.Math.ContinuousHistogram()</signature>
                        <name>YWithoutBlack</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.IntegralImage</name>
                <methodlist>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.IntegralImage(AForge.Imaging.UnmanagedImage)</signature>
                        <name>FromBitmap</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.IntegralImage(System.Drawing.Bitmap)</signature>
                        <name>FromBitmap</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.IntegralImage(System.Drawing.Imaging.BitmapData)</signature>
                        <name>FromBitmap</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Height</name>
                    </method>
                    <method>
                        <signature>unsigned int32[0...,0...]()</signature>
                        <name>get_InternalData</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Width</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32)</signature>
                        <name>GetHaarXWavelet</name>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32)</signature>
                        <name>GetHaarYWavelet</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32, int32)</signature>
                        <name>GetRectangleMean</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32, int32, int32)</signature>
                        <name>GetRectangleMean</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32, int32)</signature>
                        <name>GetRectangleMeanUnsafe</name>
                    </method>
                    <method>
                        <signature>float32(int32, int32, int32, int32)</signature>
                        <name>GetRectangleMeanUnsafe</name>
                    </method>
                    <method>
                        <signature>unsigned int32(int32, int32, int32)</signature>
                        <name>GetRectangleSum</name>
                    </method>
                    <method>
                        <signature>unsigned int32(int32, int32, int32, int32)</signature>
                        <name>GetRectangleSum</name>
                    </method>
                    <method>
                        <signature>unsigned int32(int32, int32, int32)</signature>
                        <name>GetRectangleSumUnsafe</name>
                    </method>
                    <method>
                        <signature>unsigned int32(int32, int32, int32, int32)</signature>
                        <name>GetRectangleSumUnsafe</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>height</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[0...,0...]</signature>
                        <name>integralImage</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>width</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Height</name>
                    </property>
                    <property>
                        <signature>unsigned int32[0...,0...]()</signature>
                        <name>InternalData</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Width</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Interpolation</name>
                <newname>a2</newname>
                <methodlist>
                    <method>
                        <signature>float64(float64)</signature>
                        <name>BiCubicKernel</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.InvalidImagePropertiesException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ITemplateMatching</name>
                <methodlist>
                    <method>
                        <signature>AForge.Imaging.TemplateMatch[](AForge.Imaging.UnmanagedImage, AForge.Imaging.UnmanagedImage, System.Drawing.Rectangle)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.TemplateMatch[](System.Drawing.Bitmap, System.Drawing.Bitmap, System.Drawing.Rectangle)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.TemplateMatch[](System.Drawing.Imaging.BitmapData, System.Drawing.Imaging.BitmapData, System.Drawing.Rectangle)</signature>
                        <name>ProcessImage</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.MemoryManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>native int(int32)</signature>
                        <name>Alloc</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>Free</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>FreeUnusedMemory</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BusyMemoryBlocks</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CachedMemory</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CurrentCacheSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FreeMemoryBlocks</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaximumCacheSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxSizeToCache</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinSizeToCache</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaximumCacheSize</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MaxSizeToCache</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_MinSizeToCache</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>busyBlocks</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>cachedMemory</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>currentCacheSize</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maximumCacheSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxSizeToCache</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;AForge.Imaging.MemoryManager/CacheBlock&gt;</signature>
                        <name>memoryBlocks</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>minSizeToCache</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>BusyMemoryBlocks</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>CachedMemory</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>CurrentCacheSize</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FreeMemoryBlocks</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaximumCacheSize</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxSizeToCache</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MinSizeToCache</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.MemoryManager/CacheBlock</name>
                <newname>AForge.Imaging.MemoryManager/a</newname>
                <methodlist>
                    <method>
                        <signature>void(native int, int32)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>Free</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>MemoryBlock</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Size</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.MoravecCornersDetector</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Threshold</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_WindowSize</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Drawing.Bitmap)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Drawing.Imaging.BitmapData)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Threshold</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_WindowSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>threshold</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>windowSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>xDelta</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>yDelta</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Threshold</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>WindowSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.ObjectsOrder</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Imaging.ObjectsOrder</signature>
                        <name>Area</name>
                    </field>
                    <field>
                        <signature>AForge.Imaging.ObjectsOrder</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>AForge.Imaging.ObjectsOrder</signature>
                        <name>Size</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>AForge.Imaging.ObjectsOrder</signature>
                        <name>XY</name>
                    </field>
                    <field>
                        <signature>AForge.Imaging.ObjectsOrder</signature>
                        <name>YX</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.QuadrilateralFinder</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.PixelFormat)</signature>
                        <name>CheckPixelFormat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Drawing.Bitmap)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Drawing.Imaging.BitmapData)</signature>
                        <name>ProcessImage</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.RecursiveBlobCounter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>BuildObjectsMap</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_BackgroundThreshold</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8*, int32)</signature>
                        <name>LabelColorPixel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8*, int32)</signature>
                        <name>LabelPixel</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_BackgroundThreshold</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>backgroundThresholdB</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>backgroundThresholdG</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>backgroundThresholdR</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>pixelSize</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stride</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>tempLabels</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>BackgroundThreshold</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.RGB</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8, unsigned int8, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8, unsigned int8, unsigned int8, unsigned int8)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color()</signature>
                        <name>get_Color</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Color)</signature>
                        <name>set_Color</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int16</signature>
                        <name>A</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>Alpha</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>B</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>Blue</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>G</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>Green</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>R</name>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>Red</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Color()</signature>
                        <name>Color</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.SusanCornersDetector</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DifferenceThreshold</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_GeometricalThreshold</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Drawing.Bitmap)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Drawing.Imaging.BitmapData)</signature>
                        <name>ProcessImage</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DifferenceThreshold</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_GeometricalThreshold</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>differenceThreshold</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>geometricalThreshold</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>rowRadius</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>DifferenceThreshold</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>GeometricalThreshold</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.TemplateMatch</name>
                <methodlist>
                    <method>
                        <signature>void(System.Drawing.Rectangle, float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>get_Rectangle</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Similarity</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Rectangle</signature>
                        <name>rect</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>similarity</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>Rectangle</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Similarity</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Textures.CloudsTexture</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32[0...,0...](int32, int32)</signature>
                        <name>Generate</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Math.PerlinNoise</signature>
                        <name>noise</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>r</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Random</signature>
                        <name>rand</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Textures.ITextureGenerator</name>
                <methodlist>
                    <method>
                        <signature>float32[0...,0...](int32, int32)</signature>
                        <name>Generate</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Textures.LabyrinthTexture</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32[0...,0...](int32, int32)</signature>
                        <name>Generate</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Math.PerlinNoise</signature>
                        <name>noise</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>r</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Random</signature>
                        <name>rand</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Textures.MarbleTexture</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float64, float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32[0...,0...](int32, int32)</signature>
                        <name>Generate</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_XPeriod</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_YPeriod</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_XPeriod</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_YPeriod</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Math.PerlinNoise</signature>
                        <name>noise</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>r</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Random</signature>
                        <name>rand</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>xPeriod</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>yPeriod</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>XPeriod</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>YPeriod</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Textures.TextileTexture</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32[0...,0...](int32, int32)</signature>
                        <name>Generate</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Math.PerlinNoise</signature>
                        <name>noise</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>r</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Random</signature>
                        <name>rand</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Textures.TextureTools</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32[0...,0...](AForge.Imaging.UnmanagedImage)</signature>
                        <name>FromBitmap</name>
                    </method>
                    <method>
                        <signature>float32[0...,0...](System.Drawing.Bitmap)</signature>
                        <name>FromBitmap</name>
                    </method>
                    <method>
                        <signature>float32[0...,0...](System.Drawing.Imaging.BitmapData)</signature>
                        <name>FromBitmap</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(float32[0...,0...])</signature>
                        <name>ToBitmap</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.Textures.WoodTexture</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32[0...,0...](int32, int32)</signature>
                        <name>Generate</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Rings</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Rings</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Math.PerlinNoise</signature>
                        <name>noise</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>r</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Random</signature>
                        <name>rand</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>rings</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>Rings</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.UnmanagedImage</name>
                <methodlist>
                    <method>
                        <signature>void(native int, int32, int32, int32, System.Drawing.Imaging.PixelFormat)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>unsigned int16[](System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>Collect16bppPixelValues</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>Collect8bppPixelValues</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;()</signature>
                        <name>CollectActivePixels</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Drawing.Rectangle)</signature>
                        <name>CollectActivePixels</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>Copy</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage(int32, int32, System.Drawing.Imaging.PixelFormat)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Finalize</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage(System.Drawing.Bitmap)</signature>
                        <name>FromManagedImage</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.UnmanagedImage(System.Drawing.Imaging.BitmapData)</signature>
                        <name>FromManagedImage</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Height</name>
                    </method>
                    <method>
                        <signature>native int()</signature>
                        <name>get_ImageData</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Imaging.PixelFormat()</signature>
                        <name>get_PixelFormat</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Stride</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Width</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color(AForge.IntPoint)</signature>
                        <name>GetPixel</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Color(int32, int32)</signature>
                        <name>GetPixel</name>
                    </method>
                    <method>
                        <signature>void(AForge.IntPoint, System.Drawing.Color)</signature>
                        <name>SetPixel</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, System.Drawing.Color)</signature>
                        <name>SetPixel</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, unsigned int8)</signature>
                        <name>SetPixel</name>
                    </method>
                    <method>
                        <signature>void(int32, int32, unsigned int8, unsigned int8, unsigned int8, unsigned int8)</signature>
                        <name>SetPixel</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, System.Drawing.Color)</signature>
                        <name>SetPixels</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>ToManagedImage</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(bool)</signature>
                        <name>ToManagedImage</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>height</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>imageData</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>mustBeDisposed</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Imaging.PixelFormat</signature>
                        <name>pixelFormat</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>stride</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>width</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Height</name>
                    </property>
                    <property>
                        <signature>native int()</signature>
                        <name>ImageData</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Imaging.PixelFormat()</signature>
                        <name>PixelFormat</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Stride</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Width</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.UnsupportedImageFormatException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.VerticalIntensityStatistics</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Imaging.BitmapData)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>get_Blue</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>get_Gray</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>get_Green</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsGrayscale</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>get_Red</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.UnmanagedImage)</signature>
                        <name>ProcessImage</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Math.Histogram</signature>
                        <name>blue</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Histogram</signature>
                        <name>gray</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Histogram</signature>
                        <name>green</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Histogram</signature>
                        <name>red</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>Blue</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>Gray</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>Green</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsGrayscale</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Histogram()</signature>
                        <name>Red</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Imaging.YCbCr</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.YCbCr(AForge.Imaging.RGB)</signature>
                        <name>FromRGB</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.RGB, AForge.Imaging.YCbCr)</signature>
                        <name>FromRGB</name>
                    </method>
                    <method>
                        <signature>AForge.Imaging.RGB()</signature>
                        <name>ToRGB</name>
                    </method>
                    <method>
                        <signature>void(AForge.Imaging.YCbCr, AForge.Imaging.RGB)</signature>
                        <name>ToRGB</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>Cb</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>CbIndex</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>Cr</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>CrIndex</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>Y</name>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>YIndex</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
        </module>
        <module>
            <name>AForge.Math.dll</name>
            <type>
                <name>AForge.Math.Complex</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Complex)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float64, float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex, AForge.Math.Complex)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex, float64)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Complex, AForge.Math.Complex, AForge.Math.Complex&amp;)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Complex, float64, AForge.Math.Complex&amp;)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Complex, AForge.Math.Complex)</signature>
                        <name>ApproxEqual</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Complex, AForge.Math.Complex, float64)</signature>
                        <name>ApproxEqual</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex()</signature>
                        <name>Clone</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex)</signature>
                        <name>Cos</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex, AForge.Math.Complex)</signature>
                        <name>Divide</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex, float64)</signature>
                        <name>Divide</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(float64, AForge.Math.Complex)</signature>
                        <name>Divide</name>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Complex, AForge.Math.Complex, AForge.Math.Complex&amp;)</signature>
                        <name>Divide</name>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Complex, float64, AForge.Math.Complex&amp;)</signature>
                        <name>Divide</name>
                    </method>
                    <method>
                        <signature>void(float64, AForge.Math.Complex, AForge.Math.Complex&amp;)</signature>
                        <name>Divide</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex)</signature>
                        <name>Exp</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Magnitude</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Phase</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_SquaredMagnitude</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)</signature>
                        <name>GetObjectData</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex)</signature>
                        <name>Log</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex, AForge.Math.Complex)</signature>
                        <name>Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex, float64)</signature>
                        <name>Multiply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Complex, AForge.Math.Complex, AForge.Math.Complex&amp;)</signature>
                        <name>Multiply</name>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Complex, float64, AForge.Math.Complex&amp;)</signature>
                        <name>Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex)</signature>
                        <name>Negate</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex, AForge.Math.Complex)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex, float64)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(float64, AForge.Math.Complex)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex, AForge.Math.Complex)</signature>
                        <name>op_Division</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex, float64)</signature>
                        <name>op_Division</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(float64, AForge.Math.Complex)</signature>
                        <name>op_Division</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Complex, AForge.Math.Complex)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(float32)</signature>
                        <name>op_Explicit</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(float64)</signature>
                        <name>op_Explicit</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Complex, AForge.Math.Complex)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex, AForge.Math.Complex)</signature>
                        <name>op_Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex, float64)</signature>
                        <name>op_Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(float64, AForge.Math.Complex)</signature>
                        <name>op_Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex, AForge.Math.Complex)</signature>
                        <name>op_Subtraction</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex, float64)</signature>
                        <name>op_Subtraction</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(float64, AForge.Math.Complex)</signature>
                        <name>op_Subtraction</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex)</signature>
                        <name>op_UnaryNegation</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(string)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex)</signature>
                        <name>Sin</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex)</signature>
                        <name>Sqrt</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex, AForge.Math.Complex)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex, float64)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(float64, AForge.Math.Complex)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Complex, AForge.Math.Complex, AForge.Math.Complex&amp;)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Complex, float64, AForge.Math.Complex&amp;)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>void(float64, AForge.Math.Complex, AForge.Math.Complex&amp;)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.ICloneable.Clone</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex(AForge.Math.Complex)</signature>
                        <name>Tan</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>bool(string, AForge.Math.Complex&amp;)</signature>
                        <name>TryParse</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Math.Complex</signature>
                        <name>I</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>Im</name>
                    </field>
                    <field>
                        <signature>AForge.Math.Complex</signature>
                        <name>One</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>Re</name>
                    </field>
                    <field>
                        <signature>AForge.Math.Complex</signature>
                        <name>Zero</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>Magnitude</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>Phase</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>SquaredMagnitude</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.ContinuousHistogram</name>
                <methodlist>
                    <method>
                        <signature>void(int32[], AForge.Range)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Max</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Mean</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Median</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Min</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_Range</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_StdDev</name>
                    </method>
                    <method>
                        <signature>int32[]()</signature>
                        <name>get_Values</name>
                    </method>
                    <method>
                        <signature>AForge.Range(float32)</signature>
                        <name>GetRange</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Update</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>max</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>mean</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>median</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>min</name>
                    </field>
                    <field>
                        <signature>AForge.Range</signature>
                        <name>range</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>stdDev</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>total</name>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>values</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>Max</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Mean</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Median</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Min</name>
                    </property>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>Range</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>StdDev</name>
                    </property>
                    <property>
                        <signature>int32[]()</signature>
                        <name>Values</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.FourierTransform</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Complex[], AForge.Math.FourierTransform/Direction)</signature>
                        <name>DFT</name>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Complex[0...,0...], AForge.Math.FourierTransform/Direction)</signature>
                        <name>DFT2</name>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Complex[], AForge.Math.FourierTransform/Direction)</signature>
                        <name>FFT</name>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Complex[0...,0...], AForge.Math.FourierTransform/Direction)</signature>
                        <name>FFT2</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Complex[](int32, AForge.Math.FourierTransform/Direction)</signature>
                        <name>GetComplexRotation</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32[](int32)</signature>
                        <name>GetReversedBits</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Complex[])</signature>
                        <name>ReorderData</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Math.Complex[][0...,0...]</signature>
                        <name>complexRotation</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxBits</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>maxLength</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>minBits</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>minLength</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32[][]</signature>
                        <name>reversedBits</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.FourierTransform/Direction</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Math.FourierTransform/Direction</signature>
                        <name>Backward</name>
                    </field>
                    <field>
                        <signature>AForge.Math.FourierTransform/Direction</signature>
                        <name>Forward</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Gaussian</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64(float64)</signature>
                        <name>Function</name>
                    </method>
                    <method>
                        <signature>float64(float64, float64)</signature>
                        <name>Function2D</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Sigma</name>
                    </method>
                    <method>
                        <signature>float64[](int32)</signature>
                        <name>Kernel</name>
                    </method>
                    <method>
                        <signature>float64[0...,0...](int32)</signature>
                        <name>Kernel2D</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Sigma</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>sigma</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>sqrSigma</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>Sigma</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.ClosePointsMergingOptimizer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_MaxDistanceToMerge</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>OptimizeShape</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_MaxDistanceToMerge</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>maxDistanceToMerge</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>MaxDistanceToMerge</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.CoplanarPosit</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Math.Vector3[], float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Point[], AForge.Math.Matrix3x3&amp;, AForge.Math.Vector3&amp;)</signature>
                        <name>EstimatePose</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3()</signature>
                        <name>get_AlternateEstimatedRotation</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3()</signature>
                        <name>get_AlternateEstimatedTranslation</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_AlternateEstimationError</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3()</signature>
                        <name>get_BestEstimatedRotation</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3()</signature>
                        <name>get_BestEstimatedTranslation</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_BestEstimationError</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_FocalLength</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3[]()</signature>
                        <name>get_Model</name>
                    </method>
                    <method>
                        <signature>float32(AForge.Point[], AForge.Math.Matrix3x3, AForge.Math.Vector3)</signature>
                        <name>GetError</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float32(AForge.Point[], AForge.Math.Matrix3x3&amp;, AForge.Math.Vector3&amp;)</signature>
                        <name>Iterate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Point[], AForge.Math.Vector3, AForge.Math.Matrix3x3&amp;, AForge.Math.Matrix3x3&amp;, AForge.Math.Vector3&amp;, AForge.Math.Vector3&amp;)</signature>
                        <name>POS</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_FocalLength</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>alternatePoseError</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Matrix3x3</signature>
                        <name>alternateRotation</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Vector3</signature>
                        <name>alternateTranslation</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>bestPoseError</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Matrix3x3</signature>
                        <name>bestRotation</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Vector3</signature>
                        <name>bestTranslation</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>ErrorLimit</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>focalLength</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Vector3</signature>
                        <name>modelNormal</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Vector3[]</signature>
                        <name>modelPoints</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Matrix3x3</signature>
                        <name>modelPseudoInverse</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Matrix3x3</signature>
                        <name>modelVectors</name>
                        <newname>d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Math.Matrix3x3()</signature>
                        <name>AlternateEstimatedRotation</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Vector3()</signature>
                        <name>AlternateEstimatedTranslation</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>AlternateEstimationError</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Matrix3x3()</signature>
                        <name>BestEstimatedRotation</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Vector3()</signature>
                        <name>BestEstimatedTranslation</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>BestEstimationError</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>FocalLength</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Vector3[]()</signature>
                        <name>Model</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.FlatAnglesOptimizer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_MaxAngleToKeep</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>OptimizeShape</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_MaxAngleToKeep</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>maxAngleToKeep</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>MaxAngleToKeep</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.GeometryTools</name>
                <methodlist>
                    <method>
                        <signature>float32(AForge.Point, AForge.Point, AForge.Point, AForge.Point)</signature>
                        <name>GetAngleBetweenLines</name>
                    </method>
                    <method>
                        <signature>float32(AForge.Point, AForge.Point, AForge.Point)</signature>
                        <name>GetAngleBetweenVectors</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.GrahamConvexHull</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>FindHull</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.GrahamConvexHull/PointToProcess</name>
                <newname>AForge.Math.Geometry.GrahamConvexHull/a</newname>
                <methodlist>
                    <method>
                        <signature>void(AForge.IntPoint)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>CompareTo</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint()</signature>
                        <name>ToPoint</name>
                        <newname>e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>Distance</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>K</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>X</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Y</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.IConvexHullAlgorithm</name>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>FindHull</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.IShapeOptimizer</name>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>OptimizeShape</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.Line</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Point, AForge.Point)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Point, float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32, float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32, float32, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32(AForge.Point)</signature>
                        <name>DistanceToPoint</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Geometry.Line(AForge.Point, AForge.Point)</signature>
                        <name>FromPoints</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Geometry.Line(AForge.Point, float32)</signature>
                        <name>FromPointTheta</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Geometry.Line(float32, float32)</signature>
                        <name>FromRTheta</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Geometry.Line(float32, float32)</signature>
                        <name>FromSlopeIntercept</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Intercept</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsHorizontal</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsVertical</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Slope</name>
                    </method>
                    <method>
                        <signature>float32(AForge.Math.Geometry.Line)</signature>
                        <name>GetAngleBetweenLines</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;AForge.Point&gt;(AForge.Math.Geometry.Line)</signature>
                        <name>GetIntersectionWith</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;AForge.Point&gt;(AForge.Math.Geometry.LineSegment)</signature>
                        <name>GetIntersectionWith</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Geometry.Line, AForge.Math.Geometry.Line)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Geometry.Line, AForge.Math.Geometry.Line)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>b</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>k</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>Intercept</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsHorizontal</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsVertical</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Slope</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.LineSegment</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Point, AForge.Point)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32(AForge.Point)</signature>
                        <name>DistanceToPoint</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>AForge.Point()</signature>
                        <name>get_End</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Length</name>
                    </method>
                    <method>
                        <signature>AForge.Point()</signature>
                        <name>get_Start</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;AForge.Point&gt;(AForge.Math.Geometry.Line)</signature>
                        <name>GetIntersectionWith</name>
                    </method>
                    <method>
                        <signature>System.Nullable`1&lt;AForge.Point&gt;(AForge.Math.Geometry.LineSegment)</signature>
                        <name>GetIntersectionWith</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Geometry.LineSegment/ProjectionLocation(AForge.Point)</signature>
                        <name>LocateProjection</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Geometry.LineSegment, AForge.Math.Geometry.LineSegment)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Geometry.Line(AForge.Math.Geometry.LineSegment)</signature>
                        <name>op_Explicit</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Geometry.LineSegment, AForge.Math.Geometry.LineSegment)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Point</signature>
                        <name>end</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Geometry.Line</signature>
                        <name>line</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Point</signature>
                        <name>start</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Point()</signature>
                        <name>End</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Length</name>
                    </property>
                    <property>
                        <signature>AForge.Point()</signature>
                        <name>Start</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.LineSegment/ProjectionLocation</name>
                <newname>AForge.Math.Geometry.LineSegment/a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Math.Geometry.LineSegment/ProjectionLocation</signature>
                        <name>RayA</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Geometry.LineSegment/ProjectionLocation</signature>
                        <name>RayB</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Geometry.LineSegment/ProjectionLocation</signature>
                        <name>SegmentAB</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.LineStraighteningOptimizer</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_MaxDistanceToRemove</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>OptimizeShape</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_MaxDistanceToRemove</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>maxDistanceToRemove</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>MaxDistanceToRemove</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.PointsCloud</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Collections.Generic.IEnumerable`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>FindQuadrilateralCorners</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_QuadrilateralRelativeDistortionLimit</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;AForge.IntPoint&gt;, AForge.IntPoint&amp;, AForge.IntPoint&amp;)</signature>
                        <name>GetBoundingRectangle</name>
                    </method>
                    <method>
                        <signature>AForge.Point(System.Collections.Generic.IEnumerable`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>GetCenterOfGravity</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(System.Collections.Generic.IEnumerable`1&lt;AForge.IntPoint&gt;, AForge.IntPoint)</signature>
                        <name>GetFurthestPoint</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(System.Collections.Generic.IEnumerable`1&lt;AForge.IntPoint&gt;, AForge.IntPoint, AForge.IntPoint)</signature>
                        <name>GetFurthestPointFromLine</name>
                    </method>
                    <method>
                        <signature>AForge.IntPoint(System.Collections.Generic.IEnumerable`1&lt;AForge.IntPoint&gt;, AForge.IntPoint, AForge.IntPoint, float32&amp;)</signature>
                        <name>GetFurthestPointFromLine</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;AForge.IntPoint&gt;, AForge.IntPoint, AForge.IntPoint, AForge.IntPoint&amp;, AForge.IntPoint&amp;)</signature>
                        <name>GetFurthestPointsFromLine</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IEnumerable`1&lt;AForge.IntPoint&gt;, AForge.IntPoint, AForge.IntPoint, AForge.IntPoint&amp;, float32&amp;, AForge.IntPoint&amp;, float32&amp;)</signature>
                        <name>GetFurthestPointsFromLine</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_QuadrilateralRelativeDistortionLimit</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.IList`1&lt;AForge.IntPoint&gt;, AForge.IntPoint)</signature>
                        <name>Shift</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>quadrilateralRelativeDistortionLimit</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>QuadrilateralRelativeDistortionLimit</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.PolygonSubType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Math.Geometry.PolygonSubType</signature>
                        <name>EquilateralTriangle</name>
                    </field>
                    <field>
                        <signature>AForge.Math.Geometry.PolygonSubType</signature>
                        <name>IsoscelesTriangle</name>
                    </field>
                    <field>
                        <signature>AForge.Math.Geometry.PolygonSubType</signature>
                        <name>Parallelogram</name>
                    </field>
                    <field>
                        <signature>AForge.Math.Geometry.PolygonSubType</signature>
                        <name>Rectangle</name>
                    </field>
                    <field>
                        <signature>AForge.Math.Geometry.PolygonSubType</signature>
                        <name>RectangledIsoscelesTriangle</name>
                    </field>
                    <field>
                        <signature>AForge.Math.Geometry.PolygonSubType</signature>
                        <name>RectangledTriangle</name>
                    </field>
                    <field>
                        <signature>AForge.Math.Geometry.PolygonSubType</signature>
                        <name>Rhombus</name>
                    </field>
                    <field>
                        <signature>AForge.Math.Geometry.PolygonSubType</signature>
                        <name>Square</name>
                    </field>
                    <field>
                        <signature>AForge.Math.Geometry.PolygonSubType</signature>
                        <name>Trapezoid</name>
                    </field>
                    <field>
                        <signature>AForge.Math.Geometry.PolygonSubType</signature>
                        <name>Unknown</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.Posit</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Math.Vector3[], float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Point[], AForge.Math.Matrix3x3&amp;, AForge.Math.Vector3&amp;)</signature>
                        <name>EstimatePose</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_FocalLength</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3[]()</signature>
                        <name>get_Model</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_FocalLength</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>focalLength</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Vector3[]</signature>
                        <name>modelPoints</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Matrix3x3</signature>
                        <name>modelPseudoInverse</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Matrix3x3</signature>
                        <name>modelVectors</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>stop_epsilon</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>FocalLength</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Vector3[]()</signature>
                        <name>Model</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.ShapeType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Math.Geometry.ShapeType</signature>
                        <name>Circle</name>
                    </field>
                    <field>
                        <signature>AForge.Math.Geometry.ShapeType</signature>
                        <name>Quadrilateral</name>
                    </field>
                    <field>
                        <signature>AForge.Math.Geometry.ShapeType</signature>
                        <name>Triangle</name>
                    </field>
                    <field>
                        <signature>AForge.Math.Geometry.ShapeType</signature>
                        <name>Unknown</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Geometry.SimpleShapeChecker</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>CheckIfPointsFitShape</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Geometry.PolygonSubType(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>CheckPolygonSubType</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Geometry.ShapeType(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>CheckShapeType</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_AngleError</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_LengthError</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_MinAcceptableDistortion</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_RelativeDistortionLimit</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>GetShapeCorners</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>IsCircle</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, AForge.Point&amp;, float32&amp;)</signature>
                        <name>IsCircle</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;&amp;)</signature>
                        <name>IsConvexPolygon</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>IsQuadrilateral</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;&amp;)</signature>
                        <name>IsQuadrilateral</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;)</signature>
                        <name>IsTriangle</name>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;, System.Collections.Generic.List`1&lt;AForge.IntPoint&gt;&amp;)</signature>
                        <name>IsTriangle</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_AngleError</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_LengthError</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_MinAcceptableDistortion</name>
                    </method>
                    <method>
                        <signature>void(float32)</signature>
                        <name>set_RelativeDistortionLimit</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>angleError</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>lengthError</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>minAcceptableDistortion</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>relativeDistortionLimit</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Geometry.FlatAnglesOptimizer</signature>
                        <name>shapeOptimizer</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>AngleError</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>LengthError</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>MinAcceptableDistortion</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>RelativeDistortionLimit</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Histogram</name>
                <methodlist>
                    <method>
                        <signature>void(int32[])</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Max</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Mean</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Median</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Min</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_StdDev</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_TotalCount</name>
                    </method>
                    <method>
                        <signature>int32[]()</signature>
                        <name>get_Values</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange(float64)</signature>
                        <name>GetRange</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Update</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>max</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>mean</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>median</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>min</name>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>stdDev</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>total</name>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>values</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Max</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>Mean</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Median</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Min</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>StdDev</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>TotalCount</name>
                    </property>
                    <property>
                        <signature>int32[]()</signature>
                        <name>Values</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Matrix3x3</name>
                <methodlist>
                    <method>
                        <signature>AForge.Math.Matrix3x3(AForge.Math.Matrix3x3, AForge.Math.Matrix3x3)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3(AForge.Math.Matrix3x3, float32)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3()</signature>
                        <name>Adjugate</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3(AForge.Math.Vector3)</signature>
                        <name>CreateDiagonal</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3(AForge.Math.Vector3, AForge.Math.Vector3, AForge.Math.Vector3)</signature>
                        <name>CreateFromColumns</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3(AForge.Math.Vector3, AForge.Math.Vector3, AForge.Math.Vector3)</signature>
                        <name>CreateFromRows</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3(float32, float32, float32)</signature>
                        <name>CreateFromYawPitchRoll</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3(float32)</signature>
                        <name>CreateRotationX</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3(float32)</signature>
                        <name>CreateRotationY</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3(float32)</signature>
                        <name>CreateRotationZ</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Matrix3x3)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>void(float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>ExtractYawPitchRoll</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Determinant</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3()</signature>
                        <name>get_Identity</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(int32)</signature>
                        <name>GetColumn</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(int32)</signature>
                        <name>GetRow</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3()</signature>
                        <name>Inverse</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3(AForge.Math.Matrix3x3, AForge.Math.Matrix3x3)</signature>
                        <name>Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3(AForge.Math.Matrix3x3, float32)</signature>
                        <name>Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Matrix3x3, AForge.Math.Vector3)</signature>
                        <name>Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3()</signature>
                        <name>MultiplySelfByTranspose</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3()</signature>
                        <name>MultiplyTransposeBySelf</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3(AForge.Math.Matrix3x3, AForge.Math.Matrix3x3)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3(AForge.Math.Matrix3x3, float32)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Matrix3x3, AForge.Math.Matrix3x3)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Matrix3x3, AForge.Math.Matrix3x3)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3(AForge.Math.Matrix3x3, AForge.Math.Matrix3x3)</signature>
                        <name>op_Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3(AForge.Math.Matrix3x3, float32)</signature>
                        <name>op_Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Matrix3x3, AForge.Math.Vector3)</signature>
                        <name>op_Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3(AForge.Math.Matrix3x3, AForge.Math.Matrix3x3)</signature>
                        <name>op_Subtraction</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3()</signature>
                        <name>PseudoInverse</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3(AForge.Math.Matrix3x3, AForge.Math.Matrix3x3)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>void(AForge.Math.Matrix3x3&amp;, AForge.Math.Vector3&amp;, AForge.Math.Matrix3x3&amp;)</signature>
                        <name>SVD</name>
                    </method>
                    <method>
                        <signature>float32[]()</signature>
                        <name>ToArray</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix3x3()</signature>
                        <name>Transpose</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>V00</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V01</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V02</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V10</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V11</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V12</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V20</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V21</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V22</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>Determinant</name>
                    </property>
                    <property>
                        <signature>AForge.Math.Matrix3x3()</signature>
                        <name>Identity</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Matrix4x4</name>
                <methodlist>
                    <method>
                        <signature>AForge.Math.Matrix4x4(AForge.Math.Matrix4x4, AForge.Math.Matrix4x4)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4(AForge.Math.Vector4)</signature>
                        <name>CreateDiagonal</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4(AForge.Math.Vector4, AForge.Math.Vector4, AForge.Math.Vector4, AForge.Math.Vector4)</signature>
                        <name>CreateFromColumns</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4(AForge.Math.Matrix3x3)</signature>
                        <name>CreateFromRotation</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4(AForge.Math.Vector4, AForge.Math.Vector4, AForge.Math.Vector4, AForge.Math.Vector4)</signature>
                        <name>CreateFromRows</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4(float32, float32, float32)</signature>
                        <name>CreateFromYawPitchRoll</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4(AForge.Math.Vector3, AForge.Math.Vector3)</signature>
                        <name>CreateLookAt</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4(float32, float32, float32, float32)</signature>
                        <name>CreatePerspective</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4(float32)</signature>
                        <name>CreateRotationX</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4(float32)</signature>
                        <name>CreateRotationY</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4(float32)</signature>
                        <name>CreateRotationZ</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4(AForge.Math.Vector3)</signature>
                        <name>CreateTranslation</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Matrix4x4)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>void(float32&amp;, float32&amp;, float32&amp;)</signature>
                        <name>ExtractYawPitchRoll</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4()</signature>
                        <name>get_Identity</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(int32)</signature>
                        <name>GetColumn</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(int32)</signature>
                        <name>GetRow</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4(AForge.Math.Matrix4x4, AForge.Math.Matrix4x4)</signature>
                        <name>Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Matrix4x4, AForge.Math.Vector4)</signature>
                        <name>Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4(AForge.Math.Matrix4x4, AForge.Math.Matrix4x4)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Matrix4x4, AForge.Math.Matrix4x4)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Matrix4x4, AForge.Math.Matrix4x4)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4(AForge.Math.Matrix4x4, AForge.Math.Matrix4x4)</signature>
                        <name>op_Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Matrix4x4, AForge.Math.Vector4)</signature>
                        <name>op_Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4(AForge.Math.Matrix4x4, AForge.Math.Matrix4x4)</signature>
                        <name>op_Subtraction</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Matrix4x4(AForge.Math.Matrix4x4, AForge.Math.Matrix4x4)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>float32[]()</signature>
                        <name>ToArray</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>V00</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V01</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V02</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V03</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V10</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V11</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V12</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V13</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V20</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V21</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V22</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V23</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V30</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V31</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V32</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>V33</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Math.Matrix4x4()</signature>
                        <name>Identity</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Metrics.CosineDistance</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64(float64[], float64[])</signature>
                        <name>GetDistance</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Metrics.CosineSimilarity</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64(float64[], float64[])</signature>
                        <name>GetSimilarityScore</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Metrics.EuclideanDistance</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64(float64[], float64[])</signature>
                        <name>GetDistance</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Metrics.EuclideanSimilarity</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64(float64[], float64[])</signature>
                        <name>GetSimilarityScore</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Metrics.HammingDistance</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64(float64[], float64[])</signature>
                        <name>GetDistance</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Metrics.IDistance</name>
                <methodlist>
                    <method>
                        <signature>float64(float64[], float64[])</signature>
                        <name>GetDistance</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Metrics.ISimilarity</name>
                <methodlist>
                    <method>
                        <signature>float64(float64[], float64[])</signature>
                        <name>GetSimilarityScore</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Metrics.JaccardDistance</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64(float64[], float64[])</signature>
                        <name>GetDistance</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Metrics.ManhattanDistance</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64(float64[], float64[])</signature>
                        <name>GetDistance</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Metrics.PearsonCorrelation</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64(float64[], float64[])</signature>
                        <name>GetSimilarityScore</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.PerlinNoise</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, float64, float64, float64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64(float64, float64, float64)</signature>
                        <name>CosineInterpolate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64(float64)</signature>
                        <name>Function</name>
                    </method>
                    <method>
                        <signature>float64(float64, float64)</signature>
                        <name>Function2D</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_InitAmplitude</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_InitFrequency</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Octaves</name>
                    </method>
                    <method>
                        <signature>float64()</signature>
                        <name>get_Persistence</name>
                    </method>
                    <method>
                        <signature>float64(int32)</signature>
                        <name>Noise</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64(int32, int32)</signature>
                        <name>Noise</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_InitAmplitude</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_InitFrequency</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Octaves</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>set_Persistence</name>
                    </method>
                    <method>
                        <signature>float64(float64)</signature>
                        <name>SmoothedNoise</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64(float64, float64)</signature>
                        <name>SmoothedNoise</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float64</signature>
                        <name>initAmplitude</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>initFrequency</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>octaves</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>persistence</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float64()</signature>
                        <name>InitAmplitude</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>InitFrequency</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>Octaves</name>
                    </property>
                    <property>
                        <signature>float64()</signature>
                        <name>Persistence</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Random.ExponentialGenerator</name>
                <methodlist>
                    <method>
                        <signature>void(float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Mean</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Rate</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Variance</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>Next</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SetSeed</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Math.Random.UniformOneGenerator</signature>
                        <name>rand</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>rate</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>Mean</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Rate</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Variance</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Random.GaussianGenerator</name>
                <methodlist>
                    <method>
                        <signature>void(float32, float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32, float32, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Mean</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_StdDev</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Variance</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>Next</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SetSeed</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>mean</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Random.StandardGenerator</signature>
                        <name>rand</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>stdDev</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>Mean</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>StdDev</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Variance</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Random.IRandomNumberGenerator</name>
                <methodlist>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Mean</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Variance</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>Next</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SetSeed</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>Mean</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Variance</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Random.StandardGenerator</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Mean</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Variance</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>Next</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SetSeed</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Math.Random.UniformOneGenerator</signature>
                        <name>rand</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>secondValue</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>useSecond</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>Mean</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Variance</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Random.UniformGenerator</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Range)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Range, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Mean</name>
                    </method>
                    <method>
                        <signature>AForge.Range()</signature>
                        <name>get_Range</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Variance</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>Next</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SetSeed</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>length</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>min</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Math.Random.UniformOneGenerator</signature>
                        <name>rand</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>Mean</name>
                    </property>
                    <property>
                        <signature>AForge.Range()</signature>
                        <name>Range</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Variance</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Random.UniformOneGenerator</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Mean</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Variance</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>Next</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SetSeed</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.ThreadSafeRandom</signature>
                        <name>rand</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>Mean</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Variance</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Statistics</name>
                <methodlist>
                    <method>
                        <signature>float64(int32[])</signature>
                        <name>Entropy</name>
                    </method>
                    <method>
                        <signature>AForge.IntRange(int32[], float64)</signature>
                        <name>GetRange</name>
                    </method>
                    <method>
                        <signature>float64(int32[])</signature>
                        <name>Mean</name>
                    </method>
                    <method>
                        <signature>int32(int32[])</signature>
                        <name>Median</name>
                    </method>
                    <method>
                        <signature>int32(int32[])</signature>
                        <name>Mode</name>
                    </method>
                    <method>
                        <signature>float64(int32[])</signature>
                        <name>StdDev</name>
                    </method>
                    <method>
                        <signature>float64(int32[], float64)</signature>
                        <name>StdDev</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.svd</name>
                <newname>a7</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>float64(float64, float64)</signature>
                        <name>Pythag</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>float64(float64, float64)</signature>
                        <name>Sign</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(float64[0...,0...], float64[]&amp;, float64[0...,0...]&amp;)</signature>
                        <name>svdcmp</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Tools</name>
                <methodlist>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>IsPowerOf2</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>Log2</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>Pow2</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Vector3</name>
                <methodlist>
                    <method>
                        <signature>void(float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3()</signature>
                        <name>Abs</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, AForge.Math.Vector3)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, float32)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, AForge.Math.Vector3)</signature>
                        <name>Cross</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, AForge.Math.Vector3)</signature>
                        <name>Divide</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, float32)</signature>
                        <name>Divide</name>
                    </method>
                    <method>
                        <signature>float32(AForge.Math.Vector3, AForge.Math.Vector3)</signature>
                        <name>Dot</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Vector3)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Max</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxIndex</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Min</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinIndex</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Norm</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Square</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3()</signature>
                        <name>Inverse</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, AForge.Math.Vector3)</signature>
                        <name>Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, float32)</signature>
                        <name>Multiply</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>Normalize</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, AForge.Math.Vector3)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, float32)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, AForge.Math.Vector3)</signature>
                        <name>op_Division</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, float32)</signature>
                        <name>op_Division</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Vector3, AForge.Math.Vector3)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Vector3, AForge.Math.Vector3)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, AForge.Math.Vector3)</signature>
                        <name>op_Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, float32)</signature>
                        <name>op_Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, AForge.Math.Vector3)</signature>
                        <name>op_Subtraction</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, float32)</signature>
                        <name>op_Subtraction</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, AForge.Math.Vector3)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3(AForge.Math.Vector3, float32)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>float32[]()</signature>
                        <name>ToArray</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4()</signature>
                        <name>ToVector4</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>X</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>Y</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>Z</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>Max</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxIndex</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Min</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MinIndex</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Norm</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Square</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Math.Vector4</name>
                <methodlist>
                    <method>
                        <signature>void(float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(float32, float32, float32, float32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4()</signature>
                        <name>Abs</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Vector4, AForge.Math.Vector4)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Vector4, float32)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Vector4, AForge.Math.Vector4)</signature>
                        <name>Divide</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Vector4, float32)</signature>
                        <name>Divide</name>
                    </method>
                    <method>
                        <signature>float32(AForge.Math.Vector4, AForge.Math.Vector4)</signature>
                        <name>Dot</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Vector4)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Max</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MaxIndex</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Min</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_MinIndex</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Norm</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>get_Square</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4()</signature>
                        <name>Inverse</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Vector4, AForge.Math.Vector4)</signature>
                        <name>Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Vector4, float32)</signature>
                        <name>Multiply</name>
                    </method>
                    <method>
                        <signature>float32()</signature>
                        <name>Normalize</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Vector4, AForge.Math.Vector4)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Vector4, float32)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Vector4, AForge.Math.Vector4)</signature>
                        <name>op_Division</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Vector4, float32)</signature>
                        <name>op_Division</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Vector4, AForge.Math.Vector4)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Math.Vector4, AForge.Math.Vector4)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Vector4, AForge.Math.Vector4)</signature>
                        <name>op_Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Vector4, float32)</signature>
                        <name>op_Multiply</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Vector4, AForge.Math.Vector4)</signature>
                        <name>op_Subtraction</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Vector4, float32)</signature>
                        <name>op_Subtraction</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Vector4, AForge.Math.Vector4)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector4(AForge.Math.Vector4, float32)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>float32[]()</signature>
                        <name>ToArray</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>AForge.Math.Vector3()</signature>
                        <name>ToVector3</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>float32</signature>
                        <name>W</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>X</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>Y</name>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>Z</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>float32()</signature>
                        <name>Max</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MaxIndex</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Min</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>MinIndex</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Norm</name>
                    </property>
                    <property>
                        <signature>float32()</signature>
                        <name>Square</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
        </module>
        <module>
            <name>AForge.Video.DirectShow.dll</name>
            <type>
                <name>AForge.Video.DirectShow.CameraControlFlags</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Video.DirectShow.CameraControlFlags</signature>
                        <name>Auto</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.CameraControlFlags</signature>
                        <name>Manual</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.CameraControlFlags</signature>
                        <name>None</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.CameraControlProperty</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Video.DirectShow.CameraControlProperty</signature>
                        <name>Exposure</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.CameraControlProperty</signature>
                        <name>Focus</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.CameraControlProperty</signature>
                        <name>Iris</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.CameraControlProperty</signature>
                        <name>Pan</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.CameraControlProperty</signature>
                        <name>Roll</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.CameraControlProperty</signature>
                        <name>Tilt</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.CameraControlProperty</signature>
                        <name>Zoom</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.FileVideoSource</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.NewFrameEventHandler)</signature>
                        <name>add_NewFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.PlayingFinishedEventHandler)</signature>
                        <name>add_PlayingFinished</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.VideoSourceErrorEventHandler)</signature>
                        <name>add_VideoSourceError</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Free</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_BytesReceived</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FramesReceived</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRunning</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_PreventFreezing</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ReferenceClockEnabled</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Source</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>OnNewFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.NewFrameEventHandler)</signature>
                        <name>remove_NewFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.PlayingFinishedEventHandler)</signature>
                        <name>remove_PlayingFinished</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.VideoSourceErrorEventHandler)</signature>
                        <name>remove_VideoSourceError</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_PreventFreezing</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ReferenceClockEnabled</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Source</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SignalToStop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Start</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Stop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WaitForStop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WorkerThread</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>bytesReceived</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>fileName</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>framesReceived</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.NewFrameEventHandler</signature>
                        <name>NewFrame</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.PlayingFinishedEventHandler</signature>
                        <name>PlayingFinished</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>preventFreezing</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>referenceClockEnabled</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Threading.ManualResetEvent</signature>
                        <name>stopEvent</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Threading.Thread</signature>
                        <name>thread</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.VideoSourceErrorEventHandler</signature>
                        <name>VideoSourceError</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>BytesReceived</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FramesReceived</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRunning</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>PreventFreezing</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ReferenceClockEnabled</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Source</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>AForge.Video.NewFrameEventHandler</signature>
                        <name>NewFrame</name>
                    </event>
                    <event>
                        <signature>AForge.Video.PlayingFinishedEventHandler</signature>
                        <name>PlayingFinished</name>
                    </event>
                    <event>
                        <signature>AForge.Video.VideoSourceErrorEventHandler</signature>
                        <name>VideoSourceError</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>AForge.Video.DirectShow.FileVideoSource/Grabber</name>
                <newname>AForge.Video.DirectShow.FileVideoSource/a</newname>
                <methodlist>
                    <method>
                        <signature>void(AForge.Video.DirectShow.FileVideoSource)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(float64, native int, int32)</signature>
                        <name>BufferCB</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Height</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Width</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(float64, native int)</signature>
                        <name>SampleCB</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Height</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Width</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>height</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.FileVideoSource</signature>
                        <name>parent</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>width</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.FilterCategory</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>AudioCompressorCategory</name>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>AudioInputDevice</name>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>VideoCompressorCategory</name>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>VideoInputDevice</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.FilterInfo</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Runtime.InteropServices.ComTypes.IMoniker)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(object)</signature>
                        <name>CompareTo</name>
                    </method>
                    <method>
                        <signature>object(string)</signature>
                        <name>CreateFilter</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_MonikerString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string(System.Runtime.InteropServices.ComTypes.IMoniker)</signature>
                        <name>GetMonikerString</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>string(System.Runtime.InteropServices.ComTypes.IMoniker)</signature>
                        <name>GetName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_MonikerString</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;MonikerString&gt;k__BackingField</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>MonikerString</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.FilterInfoCollection</name>
                <methodlist>
                    <method>
                        <signature>void(System.Guid)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Guid)</signature>
                        <name>CollectFilters</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>AForge.Video.DirectShow.FilterInfo(int32)</signature>
                        <name>get_Item</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>AForge.Video.DirectShow.FilterInfo(int32)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.AMMediaType</name>
                <newname>w</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Finalize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>FixedSizeSamples</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>FormatPtr</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>FormatSize</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>FormatType</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>MajorType</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SampleSize</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>SubType</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>TemporalCompression</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>unkPtr</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.AnalogVideoStandard</name>
                <newname>an</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>None</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>NTSC_433</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>NTSC_M</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>NTSC_M_J</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>PAL_60</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>PAL_B</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>PAL_D</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>PAL_G</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>PAL_H</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>PAL_I</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>PAL_M</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>PAL_N</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>PAL_N_COMBO</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>SECAM_B</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>SECAM_D</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>SECAM_G</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>SECAM_H</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>SECAM_K</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>SECAM_K1</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>SECAM_L</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>SECAM_L1</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.BitmapInfoHeader</name>
                <newname>a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int16</signature>
                        <name>BitCount</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ColorsImportant</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ColorsUsed</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Compression</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Height</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ImageSize</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int16</signature>
                        <name>Planes</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Size</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Width</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>XPelsPerMeter</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>YPelsPerMeter</name>
                        <newname>i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.CAUUID</name>
                <newname>aj</newname>
                <methodlist>
                    <method>
                        <signature>System.Guid[]()</signature>
                        <name>ToGuidArray</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>cElems</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>pElems</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.Clsid</name>
                <newname>ag</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>AsyncReader</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>CaptureGraphBuilder2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>FilterGraph</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>SampleGrabber</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>SystemDeviceEnum</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.DsEvCode</name>
                <newname>c</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.DsEvCode</signature>
                        <name>Complete</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.DsEvCode</signature>
                        <name>DeviceLost</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.DsEvCode</signature>
                        <name>None</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.FilterInfo</name>
                <newname>b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.IFilterGraph</signature>
                        <name>FilterGraph</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Name</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.FilterState</name>
                <newname>u</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.FilterState</signature>
                        <name>State_Paused</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.FilterState</signature>
                        <name>State_Running</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.FilterState</signature>
                        <name>State_Stopped</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.FindDirection</name>
                <newname>x</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>DownstreamOnly</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>UpstreamOnly</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.FormatType</name>
                <newname>k</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>VideoInfo</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>VideoInfo2</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IAMCameraControl</name>
                <newname>r</newname>
                <methodlist>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.CameraControlProperty, int32&amp;, AForge.Video.DirectShow.CameraControlFlags&amp;)</signature>
                        <name>Get</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.CameraControlProperty, int32&amp;, int32&amp;, int32&amp;, int32&amp;, AForge.Video.DirectShow.CameraControlFlags&amp;)</signature>
                        <name>GetRange</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.CameraControlProperty, int32, AForge.Video.DirectShow.CameraControlFlags)</signature>
                        <name>Set</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IAMCrossbar</name>
                <newname>ab</newname>
                <methodlist>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>CanRoute</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(bool, int32, int32&amp;, AForge.Video.DirectShow.PhysicalConnectorType&amp;)</signature>
                        <name>get_CrossbarPinInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;)</signature>
                        <name>get_IsRoutedTo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;)</signature>
                        <name>get_PinCounts</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32)</signature>
                        <name>Route</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IAMStreamConfig</name>
                <newname>j</newname>
                <methodlist>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.AMMediaType&amp;)</signature>
                        <name>GetFormat</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;)</signature>
                        <name>GetNumberOfCapabilities</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32, AForge.Video.DirectShow.Internals.AMMediaType&amp;, AForge.Video.DirectShow.Internals.VideoStreamConfigCaps)</signature>
                        <name>GetStreamCaps</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.AMMediaType)</signature>
                        <name>SetFormat</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IAMVideoControl</name>
                <newname>aw</newname>
                <methodlist>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin, AForge.Video.DirectShow.Internals.VideoControlFlags&amp;)</signature>
                        <name>GetCaps</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin, int64&amp;)</signature>
                        <name>GetCurrentActualFrameRate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin, int32, System.Drawing.Size, int32&amp;, native int&amp;)</signature>
                        <name>GetFrameRateList</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin, int32, System.Drawing.Size, int64&amp;)</signature>
                        <name>GetMaxAvailableFrameRate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin, AForge.Video.DirectShow.Internals.VideoControlFlags&amp;)</signature>
                        <name>GetMode</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin, AForge.Video.DirectShow.Internals.VideoControlFlags)</signature>
                        <name>SetMode</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IBaseFilter</name>
                <newname>i</newname>
                <methodlist>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IEnumPins&amp;)</signature>
                        <name>EnumPins</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string, AForge.Video.DirectShow.Internals.IPin&amp;)</signature>
                        <name>FindPin</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Guid&amp;)</signature>
                        <name>GetClassID</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;)</signature>
                        <name>GetState</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(native int&amp;)</signature>
                        <name>GetSyncSource</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IFilterGraph, string)</signature>
                        <name>JoinFilterGraph</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>Pause</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.FilterInfo&amp;)</signature>
                        <name>QueryFilterInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string&amp;)</signature>
                        <name>QueryVendorInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int64)</signature>
                        <name>Run</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>SetSyncSource</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>Stop</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.ICaptureGraphBuilder2</name>
                <newname>ac</newname>
                <methodlist>
                    <method>
                        <signature>int32(string, int64)</signature>
                        <name>AllocCapFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Guid, System.Guid, AForge.Video.DirectShow.Internals.IBaseFilter, int64, int64, int16, int16)</signature>
                        <name>ControlStream</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string, string, bool, native int)</signature>
                        <name>CopyCaptureFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Guid, System.Guid, AForge.Video.DirectShow.Internals.IBaseFilter, System.Guid, object&amp;)</signature>
                        <name>FindInterface</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(object, AForge.Video.DirectShow.Internals.PinDirection, System.Guid, System.Guid, bool, int32, AForge.Video.DirectShow.Internals.IPin&amp;)</signature>
                        <name>FindPin</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IGraphBuilder&amp;)</signature>
                        <name>GetFiltergraph</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Guid, System.Guid, object, AForge.Video.DirectShow.Internals.IBaseFilter, AForge.Video.DirectShow.Internals.IBaseFilter)</signature>
                        <name>RenderStream</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IGraphBuilder)</signature>
                        <name>SetFiltergraph</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Guid, string, AForge.Video.DirectShow.Internals.IBaseFilter&amp;, native int&amp;)</signature>
                        <name>SetOutputFileName</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.ICreateDevEnum</name>
                <newname>ax</newname>
                <methodlist>
                    <method>
                        <signature>int32(System.Guid&amp;, System.Runtime.InteropServices.ComTypes.IEnumMoniker&amp;, int32)</signature>
                        <name>CreateClassEnumerator</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IEnumFilters</name>
                <newname>ai</newname>
                <methodlist>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IEnumFilters&amp;)</signature>
                        <name>Clone</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32, AForge.Video.DirectShow.Internals.IBaseFilter[], int32&amp;)</signature>
                        <name>Next</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>Reset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>Skip</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IEnumPins</name>
                <newname>f</newname>
                <methodlist>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IEnumPins&amp;)</signature>
                        <name>Clone</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32, AForge.Video.DirectShow.Internals.IPin[], int32&amp;)</signature>
                        <name>Next</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>Reset</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>Skip</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IFileSourceFilter</name>
                <newname>am</newname>
                <methodlist>
                    <method>
                        <signature>int32(string&amp;, AForge.Video.DirectShow.Internals.AMMediaType)</signature>
                        <name>GetCurFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string, AForge.Video.DirectShow.Internals.AMMediaType)</signature>
                        <name>Load</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IFilterGraph</name>
                <newname>q</newname>
                <methodlist>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IBaseFilter, string)</signature>
                        <name>AddFilter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin, AForge.Video.DirectShow.Internals.IPin, AForge.Video.DirectShow.Internals.AMMediaType)</signature>
                        <name>ConnectDirect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin)</signature>
                        <name>Disconnect</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(native int&amp;)</signature>
                        <name>EnumFilters</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string, AForge.Video.DirectShow.Internals.IBaseFilter&amp;)</signature>
                        <name>FindFilterByName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin)</signature>
                        <name>Reconnect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IBaseFilter)</signature>
                        <name>RemoveFilter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>SetDefaultSyncSource</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IFilterGraph2</name>
                <newname>n</newname>
                <methodlist>
                    <method>
                        <signature>int32()</signature>
                        <name>Abort</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IBaseFilter, string)</signature>
                        <name>AddFilter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string, string, AForge.Video.DirectShow.Internals.IBaseFilter&amp;)</signature>
                        <name>AddSourceFilter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(System.Runtime.InteropServices.ComTypes.IMoniker, System.Runtime.InteropServices.ComTypes.IBindCtx, string, AForge.Video.DirectShow.Internals.IBaseFilter&amp;)</signature>
                        <name>AddSourceFilterForMoniker</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin, AForge.Video.DirectShow.Internals.IPin)</signature>
                        <name>Connect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin, AForge.Video.DirectShow.Internals.IPin, AForge.Video.DirectShow.Internals.AMMediaType)</signature>
                        <name>ConnectDirect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin)</signature>
                        <name>Disconnect</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IEnumFilters&amp;)</signature>
                        <name>EnumFilters</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string, AForge.Video.DirectShow.Internals.IBaseFilter&amp;)</signature>
                        <name>FindFilterByName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin)</signature>
                        <name>Reconnect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin, AForge.Video.DirectShow.Internals.AMMediaType)</signature>
                        <name>ReconnectEx</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IBaseFilter)</signature>
                        <name>RemoveFilter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin)</signature>
                        <name>Render</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin, int32, native int)</signature>
                        <name>RenderEx</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string, string)</signature>
                        <name>RenderFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>SetDefaultSyncSource</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>SetLogFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>ShouldOperationContinue</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IGraphBuilder</name>
                <newname>a8</newname>
                <methodlist>
                    <method>
                        <signature>int32()</signature>
                        <name>Abort</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IBaseFilter, string)</signature>
                        <name>AddFilter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string, string, AForge.Video.DirectShow.Internals.IBaseFilter&amp;)</signature>
                        <name>AddSourceFilter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin, AForge.Video.DirectShow.Internals.IPin)</signature>
                        <name>Connect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin, AForge.Video.DirectShow.Internals.IPin, AForge.Video.DirectShow.Internals.AMMediaType)</signature>
                        <name>ConnectDirect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin)</signature>
                        <name>Disconnect</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IEnumFilters&amp;)</signature>
                        <name>EnumFilters</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string, AForge.Video.DirectShow.Internals.IBaseFilter&amp;)</signature>
                        <name>FindFilterByName</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin)</signature>
                        <name>Reconnect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IBaseFilter)</signature>
                        <name>RemoveFilter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin)</signature>
                        <name>Render</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(string, string)</signature>
                        <name>RenderFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>SetDefaultSyncSource</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>SetLogFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>ShouldOperationContinue</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IMediaControl</name>
                <newname>z</newname>
                <methodlist>
                    <method>
                        <signature>int32(string, object&amp;)</signature>
                        <name>AddSourceFilter</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(object&amp;)</signature>
                        <name>get_FilterCollection</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(object&amp;)</signature>
                        <name>get_RegFilterCollection</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;)</signature>
                        <name>GetState</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>Pause</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>RenderFile</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>Run</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>Stop</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>StopWhenReady</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IMediaEventEx</name>
                <newname>h</newname>
                <methodlist>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>CancelDefaultHandling</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.DsEvCode, native int, native int)</signature>
                        <name>FreeEventParams</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.DsEvCode&amp;, native int&amp;, native int&amp;, int32)</signature>
                        <name>GetEvent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(native int&amp;)</signature>
                        <name>GetEventHandle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32&amp;)</signature>
                        <name>GetNotifyFlags</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>RestoreDefaultHandling</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>SetNotifyFlags</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(native int, int32, native int)</signature>
                        <name>SetNotifyWindow</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32&amp;)</signature>
                        <name>WaitForCompletion</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IMediaFilter</name>
                <newname>af</newname>
                <methodlist>
                    <method>
                        <signature>int32(System.Guid&amp;)</signature>
                        <name>GetClassID</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32, AForge.Video.DirectShow.Internals.FilterState&amp;)</signature>
                        <name>GetState</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IReferenceClock&amp;)</signature>
                        <name>GetSyncSource</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>Pause</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int64)</signature>
                        <name>Run</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IReferenceClock)</signature>
                        <name>SetSyncSource</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>Stop</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IPersist</name>
                <newname>m</newname>
                <methodlist>
                    <method>
                        <signature>int32(System.Guid&amp;)</signature>
                        <name>GetClassID</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IPin</name>
                <newname>ay</newname>
                <methodlist>
                    <method>
                        <signature>int32()</signature>
                        <name>BeginFlush</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin, AForge.Video.DirectShow.Internals.AMMediaType)</signature>
                        <name>Connect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin&amp;)</signature>
                        <name>ConnectedTo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.AMMediaType)</signature>
                        <name>ConnectionMediaType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>Disconnect</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>EndFlush</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>EndOfStream</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>EnumMediaTypes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int64, int64, float64)</signature>
                        <name>NewSegment</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.AMMediaType)</signature>
                        <name>QueryAccept</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.PinDirection&amp;)</signature>
                        <name>QueryDirection</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string&amp;)</signature>
                        <name>QueryId</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(native int, int32&amp;)</signature>
                        <name>QueryInternalConnections</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.PinInfo&amp;)</signature>
                        <name>QueryPinInfo</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.IPin, AForge.Video.DirectShow.Internals.AMMediaType)</signature>
                        <name>ReceiveConnection</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IPropertyBag</name>
                <newname>ae</newname>
                <methodlist>
                    <method>
                        <signature>int32(string, object&amp;, native int)</signature>
                        <name>Read</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(string, object&amp;)</signature>
                        <name>Write</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IReferenceClock</name>
                <newname>p</newname>
                <methodlist>
                    <method>
                        <signature>int32(int64, int64, native int, int32&amp;)</signature>
                        <name>AdvisePeriodic</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int64, int64, native int, int32&amp;)</signature>
                        <name>AdviseTime</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int64&amp;)</signature>
                        <name>GetTime</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>Unadvise</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.ISampleGrabber</name>
                <newname>t</newname>
                <methodlist>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.AMMediaType)</signature>
                        <name>GetConnectedMediaType</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, native int)</signature>
                        <name>GetCurrentBuffer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>GetCurrentSample</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(bool)</signature>
                        <name>SetBufferSamples</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.ISampleGrabberCB, int32)</signature>
                        <name>SetCallback</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.AMMediaType)</signature>
                        <name>SetMediaType</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(bool)</signature>
                        <name>SetOneShot</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.ISampleGrabberCB</name>
                <newname>d</newname>
                <methodlist>
                    <method>
                        <signature>int32(float64, native int, int32)</signature>
                        <name>BufferCB</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(float64, native int)</signature>
                        <name>SampleCB</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.ISpecifyPropertyPages</name>
                <newname>l</newname>
                <methodlist>
                    <method>
                        <signature>int32(AForge.Video.DirectShow.Internals.CAUUID&amp;)</signature>
                        <name>GetPages</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.IVideoWindow</name>
                <newname>au</newname>
                <methodlist>
                    <method>
                        <signature>int32(bool&amp;)</signature>
                        <name>get_AutoShow</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(bool&amp;)</signature>
                        <name>get_BackgroundPalette</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int32&amp;)</signature>
                        <name>get_BorderColor</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>int32(string&amp;)</signature>
                        <name>get_Caption</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(bool&amp;)</signature>
                        <name>get_FullScreenMode</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(int32&amp;)</signature>
                        <name>get_Height</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32(int32&amp;)</signature>
                        <name>get_Left</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(native int&amp;)</signature>
                        <name>get_MessageDrain</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(native int&amp;)</signature>
                        <name>get_Owner</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32&amp;)</signature>
                        <name>get_Top</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int32(bool&amp;)</signature>
                        <name>get_Visible</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(int32&amp;)</signature>
                        <name>get_Width</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32(int32&amp;)</signature>
                        <name>get_WindowState</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(int32&amp;)</signature>
                        <name>get_WindowStyle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32&amp;)</signature>
                        <name>get_WindowStyleEx</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;)</signature>
                        <name>GetMaxIdealImageSize</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;)</signature>
                        <name>GetMinIdealImageSize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>GetRestorePosition</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int32&amp;, int32&amp;, int32&amp;, int32&amp;)</signature>
                        <name>GetWindowPosition</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(bool)</signature>
                        <name>HideCursor</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32(bool&amp;)</signature>
                        <name>IsCursorHidden</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32(native int, int32, native int, native int)</signature>
                        <name>NotifyOwnerMessage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(bool)</signature>
                        <name>put_AutoShow</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(bool)</signature>
                        <name>put_BackgroundPalette</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>put_BorderColor</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>put_Caption</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(bool)</signature>
                        <name>put_FullScreenMode</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>put_Height</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>put_Left</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>put_MessageDrain</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(native int)</signature>
                        <name>put_Owner</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>put_Top</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int32(bool)</signature>
                        <name>put_Visible</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>put_Width</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>put_WindowState</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>put_WindowStyle</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>put_WindowStyleEx</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>SetWindowForeground</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>int32(int32, int32, int32, int32)</signature>
                        <name>SetWindowPosition</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.MediaSubType</name>
                <newname>ar</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>Asf</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>Avi</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>DVSD</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>IYUV</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>RGB1</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>RGB24</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>RGB32</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>RGB4</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>RGB555</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>RGB565</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>RGB8</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>YUYV</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.MediaType</name>
                <newname>aa</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>Audio</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>Interleaved</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>Stream</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>Text</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>Video</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.PinCategory</name>
                <newname>a0</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Guid</signature>
                        <name>Capture</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>StillImage</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.PinDirection</name>
                <newname>a3</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.PinDirection</signature>
                        <name>Input</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.PinDirection</signature>
                        <name>Output</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.PinInfo</name>
                <newname>a1</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.PinDirection</signature>
                        <name>Direction</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.IBaseFilter</signature>
                        <name>Filter</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>Name</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.RECT</name>
                <newname>aq</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>Bottom</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Left</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Right</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Top</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.Tools</name>
                <newname>ad</newname>
                <methodlist>
                    <method>
                        <signature>AForge.Video.DirectShow.Internals.IPin(AForge.Video.DirectShow.Internals.IBaseFilter, int32)</signature>
                        <name>GetInPin</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>AForge.Video.DirectShow.Internals.IPin(AForge.Video.DirectShow.Internals.IBaseFilter, int32)</signature>
                        <name>GetOutPin</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>AForge.Video.DirectShow.Internals.IPin(AForge.Video.DirectShow.Internals.IBaseFilter, AForge.Video.DirectShow.Internals.PinDirection, int32)</signature>
                        <name>GetPin</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.VideoControlFlags</name>
                <newname>e</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.VideoControlFlags</signature>
                        <name>ExternalTriggerEnable</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.VideoControlFlags</signature>
                        <name>FlipHorizontal</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.VideoControlFlags</signature>
                        <name>FlipVertical</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.VideoControlFlags</signature>
                        <name>Trigger</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.VideoInfoHeader</name>
                <newname>az</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>AverageTimePerFrame</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BitErrorRate</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BitRate</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.BitmapInfoHeader</signature>
                        <name>BmiHeader</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.RECT</signature>
                        <name>SrcRect</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.RECT</signature>
                        <name>TargetRect</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.VideoInfoHeader2</name>
                <newname>ah</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>AverageTimePerFrame</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BitErrorRate</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BitRate</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.BitmapInfoHeader</signature>
                        <name>BmiHeader</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CopyProtectFlags</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>InterlaceFlags</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PictAspectRatioX</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PictAspectRatioY</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Reserved1</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Reserved2</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.RECT</signature>
                        <name>SrcRect</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.RECT</signature>
                        <name>TargetRect</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.VideoStreamConfigCaps</name>
                <newname>y</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>CropAlignX</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CropAlignY</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CropGranularityX</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CropGranularityY</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Guid</signature>
                        <name>Guid</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Size</signature>
                        <name>InputSize</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MaxBitsPerSecond</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Size</signature>
                        <name>MaxCroppingSize</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>MaxFrameInterval</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Size</signature>
                        <name>MaxOutputSize</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MinBitsPerSecond</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Size</signature>
                        <name>MinCroppingSize</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>MinFrameInterval</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Size</signature>
                        <name>MinOutputSize</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>OutputGranularityX</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>OutputGranularityY</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ShrinkTapsX</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ShrinkTapsY</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>StretchTapsX</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>StretchTapsY</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.Internals.AnalogVideoStandard</signature>
                        <name>VideoStandard</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Internals.Win32</name>
                <newname>ao</newname>
                <methodlist>
                    <method>
                        <signature>int32(int32, System.Runtime.InteropServices.ComTypes.IBindCtx&amp;)</signature>
                        <name>CreateBindCtx</name>
                    </method>
                    <method>
                        <signature>int32(unsigned int8*, unsigned int8*, int32)</signature>
                        <name>memcpy</name>
                    </method>
                    <method>
                        <signature>int32(System.Runtime.InteropServices.ComTypes.IBindCtx, string, int32&amp;, System.Runtime.InteropServices.ComTypes.IMoniker&amp;)</signature>
                        <name>MkParseDisplayName</name>
                    </method>
                    <method>
                        <signature>int32(native int, int32, int32, string, int32, object&amp;, int32, native int, int32, int32, native int)</signature>
                        <name>OleCreatePropertyFrame</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.PhysicalConnectorType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>Audio1394</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>AudioAESDigital</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>AudioAUX</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>AudioDecoder</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>AudioLine</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>AudioMic</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>AudioSCSI</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>AudioSPDIFDigital</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>AudioTuner</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>AudioUSB</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>Default</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>Video1394</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>VideoAUX</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>VideoBlack</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>VideoComposite</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>VideoDecoder</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>VideoEncoder</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>VideoParallelDigital</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>VideoRGB</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>VideoSCART</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>VideoSCSI</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>VideoSerialDigital</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>VideoSVideo</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>VideoTuner</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>VideoUSB</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>VideoYRYBY</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.Properties.Resources</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_camera</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>camera</name>
                    </property>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>Culture</name>
                    </property>
                    <property>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>ResourceManager</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.VideoCapabilities</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.DirectShow.Internals.IAMStreamConfig, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Video.DirectShow.VideoCapabilities)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>AForge.Video.DirectShow.VideoCapabilities[](AForge.Video.DirectShow.Internals.IAMStreamConfig)</signature>
                        <name>FromStreamConfig</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FrameRate</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Video.DirectShow.VideoCapabilities, AForge.Video.DirectShow.VideoCapabilities)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Video.DirectShow.VideoCapabilities, AForge.Video.DirectShow.VideoCapabilities)</signature>
                        <name>op_Inequality</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>AverageFrameRate</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BitCount</name>
                    </field>
                    <field>
                        <signature>System.Drawing.Size</signature>
                        <name>FrameSize</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MaximumFrameRate</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>FrameRate</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.VideoCaptureDevice</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.NewFrameEventHandler)</signature>
                        <name>add_NewFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.PlayingFinishedEventHandler)</signature>
                        <name>add_PlayingFinished</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.NewFrameEventHandler)</signature>
                        <name>add_SnapshotFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.VideoSourceErrorEventHandler)</signature>
                        <name>add_VideoSourceError</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>CheckIfCrossbarAvailable</name>
                    </method>
                    <method>
                        <signature>AForge.Video.DirectShow.VideoInput[](AForge.Video.DirectShow.Internals.IAMCrossbar)</signature>
                        <name>ColletCrossbarVideoInputs</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>DisplayCrossbarPropertyPage</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>DisplayPropertyPage</name>
                    </method>
                    <method>
                        <signature>void(native int, object)</signature>
                        <name>DisplayPropertyPage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Free</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>AForge.Video.DirectShow.VideoInput[]()</signature>
                        <name>get_AvailableCrossbarVideoInputs</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_BytesReceived</name>
                    </method>
                    <method>
                        <signature>AForge.Video.DirectShow.VideoInput()</signature>
                        <name>get_CrossbarVideoInput</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DesiredFrameRate</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size()</signature>
                        <name>get_DesiredFrameSize</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size()</signature>
                        <name>get_DesiredSnapshotSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FramesReceived</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRunning</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ProvideSnapshots</name>
                    </method>
                    <method>
                        <signature>AForge.Video.DirectShow.VideoCapabilities[]()</signature>
                        <name>get_SnapshotCapabilities</name>
                    </method>
                    <method>
                        <signature>AForge.Video.DirectShow.VideoCapabilities()</signature>
                        <name>get_SnapshotResolution</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Source</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_SourceObject</name>
                    </method>
                    <method>
                        <signature>AForge.Video.DirectShow.VideoCapabilities[]()</signature>
                        <name>get_VideoCapabilities</name>
                    </method>
                    <method>
                        <signature>AForge.Video.DirectShow.VideoCapabilities()</signature>
                        <name>get_VideoResolution</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Video.DirectShow.CameraControlProperty, int32&amp;, AForge.Video.DirectShow.CameraControlFlags&amp;)</signature>
                        <name>GetCameraProperty</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Video.DirectShow.CameraControlProperty, int32&amp;, int32&amp;, int32&amp;, int32&amp;, AForge.Video.DirectShow.CameraControlFlags&amp;)</signature>
                        <name>GetCameraPropertyRange</name>
                    </method>
                    <method>
                        <signature>AForge.Video.DirectShow.VideoInput(AForge.Video.DirectShow.Internals.IAMCrossbar)</signature>
                        <name>GetCurrentCrossbarInput</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Video.DirectShow.Internals.ICaptureGraphBuilder2, AForge.Video.DirectShow.Internals.IBaseFilter, System.Guid, AForge.Video.DirectShow.VideoCapabilities, AForge.Video.DirectShow.VideoCapabilities[]&amp;)</signature>
                        <name>GetPinCapabilitiesAndConfigureSizeAndRate</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>OnNewFrame</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>OnSnapshotFrame</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Video.NewFrameEventHandler)</signature>
                        <name>remove_NewFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.PlayingFinishedEventHandler)</signature>
                        <name>remove_PlayingFinished</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.NewFrameEventHandler)</signature>
                        <name>remove_SnapshotFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.VideoSourceErrorEventHandler)</signature>
                        <name>remove_VideoSourceError</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.DirectShow.VideoInput)</signature>
                        <name>set_CrossbarVideoInput</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DesiredFrameRate</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Size)</signature>
                        <name>set_DesiredFrameSize</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Size)</signature>
                        <name>set_DesiredSnapshotSize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ProvideSnapshots</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.DirectShow.VideoCapabilities)</signature>
                        <name>set_SnapshotResolution</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Source</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.DirectShow.VideoCapabilities)</signature>
                        <name>set_VideoResolution</name>
                    </method>
                    <method>
                        <signature>bool(AForge.Video.DirectShow.CameraControlProperty, int32, AForge.Video.DirectShow.CameraControlFlags)</signature>
                        <name>SetCameraProperty</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.DirectShow.Internals.IAMCrossbar, AForge.Video.DirectShow.VideoInput)</signature>
                        <name>SetCurrentCrossbarInput</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Video.DirectShow.Internals.IAMStreamConfig, AForge.Video.DirectShow.VideoCapabilities)</signature>
                        <name>SetResolution</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SignalToStop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SimulateTrigger</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Start</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Stop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WaitForStop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WorkerThread</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>WorkerThread</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>bytesReceived</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,AForge.Video.DirectShow.VideoInput[]&gt;</signature>
                        <name>cacheCrossbarVideoInputs</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,AForge.Video.DirectShow.VideoCapabilities[]&gt;</signature>
                        <name>cacheSnapshotCapabilities</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,AForge.Video.DirectShow.VideoCapabilities[]&gt;</signature>
                        <name>cacheVideoCapabilities</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.VideoInput</signature>
                        <name>crossbarVideoInput</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.VideoInput[]</signature>
                        <name>crossbarVideoInputs</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>deviceMoniker</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>framesReceived</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Nullable`1&lt;bool&gt;</signature>
                        <name>isCrossbarAvailable</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>needToDisplayCrossBarPropertyPage</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>needToDisplayPropertyPage</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>needToSetVideoInput</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>needToSimulateTrigger</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.NewFrameEventHandler</signature>
                        <name>NewFrame</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>parentWindowForPropertyPage</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.PlayingFinishedEventHandler</signature>
                        <name>PlayingFinished</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>provideSnapshots</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.VideoCapabilities[]</signature>
                        <name>snapshotCapabilities</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.NewFrameEventHandler</signature>
                        <name>SnapshotFrame</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.VideoCapabilities</signature>
                        <name>snapshotResolution</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>sourceObject</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>startTime</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Threading.ManualResetEvent</signature>
                        <name>stopEvent</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>sync</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Threading.Thread</signature>
                        <name>thread</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.VideoCapabilities[]</signature>
                        <name>videoCapabilities</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.VideoCapabilities</signature>
                        <name>videoResolution</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.VideoSourceErrorEventHandler</signature>
                        <name>VideoSourceError</name>
                        <newname>aa</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Video.DirectShow.VideoInput[]()</signature>
                        <name>AvailableCrossbarVideoInputs</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>BytesReceived</name>
                    </property>
                    <property>
                        <signature>AForge.Video.DirectShow.VideoInput()</signature>
                        <name>CrossbarVideoInput</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>DesiredFrameRate</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Size()</signature>
                        <name>DesiredFrameSize</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Size()</signature>
                        <name>DesiredSnapshotSize</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FramesReceived</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRunning</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ProvideSnapshots</name>
                    </property>
                    <property>
                        <signature>AForge.Video.DirectShow.VideoCapabilities[]()</signature>
                        <name>SnapshotCapabilities</name>
                    </property>
                    <property>
                        <signature>AForge.Video.DirectShow.VideoCapabilities()</signature>
                        <name>SnapshotResolution</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Source</name>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>SourceObject</name>
                    </property>
                    <property>
                        <signature>AForge.Video.DirectShow.VideoCapabilities[]()</signature>
                        <name>VideoCapabilities</name>
                    </property>
                    <property>
                        <signature>AForge.Video.DirectShow.VideoCapabilities()</signature>
                        <name>VideoResolution</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>AForge.Video.NewFrameEventHandler</signature>
                        <name>NewFrame</name>
                    </event>
                    <event>
                        <signature>AForge.Video.PlayingFinishedEventHandler</signature>
                        <name>PlayingFinished</name>
                    </event>
                    <event>
                        <signature>AForge.Video.NewFrameEventHandler</signature>
                        <name>SnapshotFrame</name>
                    </event>
                    <event>
                        <signature>AForge.Video.VideoSourceErrorEventHandler</signature>
                        <name>VideoSourceError</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>AForge.Video.DirectShow.VideoCaptureDevice/Grabber</name>
                <newname>AForge.Video.DirectShow.VideoCaptureDevice/a</newname>
                <methodlist>
                    <method>
                        <signature>void(AForge.Video.DirectShow.VideoCaptureDevice, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(float64, native int, int32)</signature>
                        <name>BufferCB</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Height</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Width</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>int32(float64, native int)</signature>
                        <name>SampleCB</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Height</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Width</name>
                        <newname>d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>height</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.VideoCaptureDevice</signature>
                        <name>parent</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>snapshotMode</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>width</name>
                        <newname>c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.VideoCaptureDeviceForm</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>devicesCombo_SelectedIndexChanged</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.DirectShow.VideoCaptureDevice)</signature>
                        <name>EnumeratedSupportedFrameSizes</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Size()</signature>
                        <name>get_CaptureSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ConfigureSnapshots</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Size()</signature>
                        <name>get_SnapshotSize</name>
                    </method>
                    <method>
                        <signature>AForge.Video.DirectShow.VideoCaptureDevice()</signature>
                        <name>get_VideoDevice</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_VideoDeviceMoniker</name>
                    </method>
                    <method>
                        <signature>AForge.Video.DirectShow.VideoInput()</signature>
                        <name>get_VideoInput</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>okButton_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Size)</signature>
                        <name>set_CaptureSize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ConfigureSnapshots</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Size)</signature>
                        <name>set_SnapshotSize</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_VideoDeviceMoniker</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.DirectShow.VideoInput)</signature>
                        <name>set_VideoInput</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>VideoCaptureDeviceForm_Load</name>
                        <newname>c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>AForge.Video.DirectShow.VideoInput[]</signature>
                        <name>availableVideoInputs</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>cancelButton</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Size</signature>
                        <name>captureSize</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>configureSnapshots</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ComboBox</signature>
                        <name>devicesCombo</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox1</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label3</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>okButton</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,AForge.Video.DirectShow.VideoCapabilities&gt;</signature>
                        <name>snapshotCapabilitiesDictionary</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ComboBox</signature>
                        <name>snapshotResolutionsCombo</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Size</signature>
                        <name>snapshotSize</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>snapshotsLabel</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,AForge.Video.DirectShow.VideoCapabilities&gt;</signature>
                        <name>videoCapabilitiesDictionary</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.VideoCaptureDevice</signature>
                        <name>videoDevice</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>videoDeviceMoniker</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.FilterInfoCollection</signature>
                        <name>videoDevices</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.VideoInput</signature>
                        <name>videoInput</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ComboBox</signature>
                        <name>videoInputsCombo</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ComboBox</signature>
                        <name>videoResolutionsCombo</name>
                        <newname>j</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Size()</signature>
                        <name>CaptureSize</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ConfigureSnapshots</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Size()</signature>
                        <name>SnapshotSize</name>
                    </property>
                    <property>
                        <signature>AForge.Video.DirectShow.VideoCaptureDevice()</signature>
                        <name>VideoDevice</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>VideoDeviceMoniker</name>
                    </property>
                    <property>
                        <signature>AForge.Video.DirectShow.VideoInput()</signature>
                        <name>VideoInput</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.DirectShow.VideoInput</name>
                <methodlist>
                    <method>
                        <signature>void(int32, AForge.Video.DirectShow.PhysicalConnectorType)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>AForge.Video.DirectShow.VideoInput()</signature>
                        <name>get_Default</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>Index</name>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.PhysicalConnectorType</signature>
                        <name>Type</name>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>AForge.Video.DirectShow.VideoInput()</signature>
                        <name>Default</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
        </module>
        <module>
            <name>AForge.Video.dll</name>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{869827A8-29D1-478E-B314-48676C61CBC2}</name>
                <newname>ap</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{869827A8-29D1-478E-B314-48676C61CBC2}/__StaticArrayInitTypeSize=3</signature>
                        <name>$$method0x600005e-1</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{869827A8-29D1-478E-B314-48676C61CBC2}/__StaticArrayInitTypeSize=3</name>
                <newname>ap/a</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.AsyncVideoSource</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Video.IVideoSource)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.IVideoSource, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.NewFrameEventHandler)</signature>
                        <name>add_NewFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.PlayingFinishedEventHandler)</signature>
                        <name>add_PlayingFinished</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.VideoSourceErrorEventHandler)</signature>
                        <name>add_VideoSourceError</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>CloneImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Imaging.BitmapData)</signature>
                        <name>CloneImage</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Free</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_BytesReceived</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FramesProcessed</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FramesReceived</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRunning</name>
                    </method>
                    <method>
                        <signature>AForge.Video.IVideoSource()</signature>
                        <name>get_NestedVideoSource</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SkipFramesIfBusy</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Source</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>imageProcessingThread_Worker</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, AForge.Video.NewFrameEventArgs)</signature>
                        <name>nestedVideoSource_NewFrame</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(AForge.Video.NewFrameEventHandler)</signature>
                        <name>remove_NewFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.PlayingFinishedEventHandler)</signature>
                        <name>remove_PlayingFinished</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.VideoSourceErrorEventHandler)</signature>
                        <name>remove_VideoSourceError</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_SkipFramesIfBusy</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SignalToStop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Start</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Stop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WaitForStop</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>framesProcessed</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Threading.Thread</signature>
                        <name>imageProcessingThread</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Threading.AutoResetEvent</signature>
                        <name>isNewFrameAvailable</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Threading.AutoResetEvent</signature>
                        <name>isProcessingThreadAvailable</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Bitmap</signature>
                        <name>lastVideoFrame</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.IVideoSource</signature>
                        <name>nestedVideoSource</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.NewFrameEventHandler</signature>
                        <name>NewFrame</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>skipFramesIfBusy</name>
                        <newname>f</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>BytesReceived</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FramesProcessed</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FramesReceived</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRunning</name>
                    </property>
                    <property>
                        <signature>AForge.Video.IVideoSource()</signature>
                        <name>NestedVideoSource</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>SkipFramesIfBusy</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Source</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>AForge.Video.NewFrameEventHandler</signature>
                        <name>NewFrame</name>
                    </event>
                    <event>
                        <signature>AForge.Video.PlayingFinishedEventHandler</signature>
                        <name>PlayingFinished</name>
                    </event>
                    <event>
                        <signature>AForge.Video.VideoSourceErrorEventHandler</signature>
                        <name>VideoSourceError</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>AForge.Video.ByteArrayUtils</name>
                <newname>as</newname>
                <methodlist>
                    <method>
                        <signature>bool(unsigned int8[], unsigned int8[], int32)</signature>
                        <name>Compare</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(unsigned int8[], unsigned int8[], int32, int32)</signature>
                        <name>Find</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.IVideoSource</name>
                <methodlist>
                    <method>
                        <signature>void(AForge.Video.NewFrameEventHandler)</signature>
                        <name>add_NewFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.PlayingFinishedEventHandler)</signature>
                        <name>add_PlayingFinished</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.VideoSourceErrorEventHandler)</signature>
                        <name>add_VideoSourceError</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_BytesReceived</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FramesReceived</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRunning</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Source</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.NewFrameEventHandler)</signature>
                        <name>remove_NewFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.PlayingFinishedEventHandler)</signature>
                        <name>remove_PlayingFinished</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.VideoSourceErrorEventHandler)</signature>
                        <name>remove_VideoSourceError</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SignalToStop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Start</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Stop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WaitForStop</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>BytesReceived</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FramesReceived</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRunning</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Source</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>AForge.Video.NewFrameEventHandler</signature>
                        <name>NewFrame</name>
                    </event>
                    <event>
                        <signature>AForge.Video.PlayingFinishedEventHandler</signature>
                        <name>PlayingFinished</name>
                    </event>
                    <event>
                        <signature>AForge.Video.VideoSourceErrorEventHandler</signature>
                        <name>VideoSourceError</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>AForge.Video.JPEGStream</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.NewFrameEventHandler)</signature>
                        <name>add_NewFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.PlayingFinishedEventHandler)</signature>
                        <name>add_PlayingFinished</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.VideoSourceErrorEventHandler)</signature>
                        <name>add_VideoSourceError</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Free</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_BytesReceived</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ForceBasicAuthentication</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FrameInterval</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FramesReceived</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRunning</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Login</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Password</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_PreventCaching</name>
                    </method>
                    <method>
                        <signature>System.Net.IWebProxy()</signature>
                        <name>get_Proxy</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RequestTimeout</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SeparateConnectionGroup</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Source</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.NewFrameEventHandler)</signature>
                        <name>remove_NewFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.PlayingFinishedEventHandler)</signature>
                        <name>remove_PlayingFinished</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.VideoSourceErrorEventHandler)</signature>
                        <name>remove_VideoSourceError</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ForceBasicAuthentication</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_FrameInterval</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Login</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Password</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_PreventCaching</name>
                    </method>
                    <method>
                        <signature>void(System.Net.IWebProxy)</signature>
                        <name>set_Proxy</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_RequestTimeout</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_SeparateConnectionGroup</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Source</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SignalToStop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Start</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Stop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WaitForStop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WorkerThread</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>bufferSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>bytesReceived</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>forceBasicAuthentication</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>frameInterval</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>framesReceived</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>login</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.NewFrameEventHandler</signature>
                        <name>NewFrame</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>password</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.PlayingFinishedEventHandler</signature>
                        <name>PlayingFinished</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>preventCaching</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Net.IWebProxy</signature>
                        <name>proxy</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>readSize</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>requestTimeout</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>source</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Threading.ManualResetEvent</signature>
                        <name>stopEvent</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Threading.Thread</signature>
                        <name>thread</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>useSeparateConnectionGroup</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.VideoSourceErrorEventHandler</signature>
                        <name>VideoSourceError</name>
                        <newname>q</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>BytesReceived</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ForceBasicAuthentication</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FrameInterval</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FramesReceived</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRunning</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Login</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Password</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>PreventCaching</name>
                    </property>
                    <property>
                        <signature>System.Net.IWebProxy()</signature>
                        <name>Proxy</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>RequestTimeout</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>SeparateConnectionGroup</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Source</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>AForge.Video.NewFrameEventHandler</signature>
                        <name>NewFrame</name>
                    </event>
                    <event>
                        <signature>AForge.Video.PlayingFinishedEventHandler</signature>
                        <name>PlayingFinished</name>
                    </event>
                    <event>
                        <signature>AForge.Video.VideoSourceErrorEventHandler</signature>
                        <name>VideoSourceError</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>AForge.Video.MJPEGStream</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.NewFrameEventHandler)</signature>
                        <name>add_NewFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.PlayingFinishedEventHandler)</signature>
                        <name>add_PlayingFinished</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.VideoSourceErrorEventHandler)</signature>
                        <name>add_VideoSourceError</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Free</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_BytesReceived</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ForceBasicAuthentication</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FramesReceived</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_HttpUserAgent</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRunning</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Login</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Password</name>
                    </method>
                    <method>
                        <signature>System.Net.IWebProxy()</signature>
                        <name>get_Proxy</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_RequestTimeout</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SeparateConnectionGroup</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Source</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.NewFrameEventHandler)</signature>
                        <name>remove_NewFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.PlayingFinishedEventHandler)</signature>
                        <name>remove_PlayingFinished</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.VideoSourceErrorEventHandler)</signature>
                        <name>remove_VideoSourceError</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ForceBasicAuthentication</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_HttpUserAgent</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Login</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Password</name>
                    </method>
                    <method>
                        <signature>void(System.Net.IWebProxy)</signature>
                        <name>set_Proxy</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_RequestTimeout</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_SeparateConnectionGroup</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Source</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SignalToStop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Start</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Stop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WaitForStop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WorkerThread</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>bufSize</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>bytesReceived</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>forceBasicAuthentication</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>framesReceived</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>login</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.NewFrameEventHandler</signature>
                        <name>NewFrame</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>password</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.PlayingFinishedEventHandler</signature>
                        <name>PlayingFinished</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Net.IWebProxy</signature>
                        <name>proxy</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>readSize</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Threading.ManualResetEvent</signature>
                        <name>reloadEvent</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>requestTimeout</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>source</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Threading.ManualResetEvent</signature>
                        <name>stopEvent</name>
                        <newname>m</newname>
                    </field>
                    <field>
                        <signature>System.Threading.Thread</signature>
                        <name>thread</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>userAgent</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>useSeparateConnectionGroup</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.VideoSourceErrorEventHandler</signature>
                        <name>VideoSourceError</name>
                        <newname>q</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>BytesReceived</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ForceBasicAuthentication</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FramesReceived</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>HttpUserAgent</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRunning</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Login</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Password</name>
                    </property>
                    <property>
                        <signature>System.Net.IWebProxy()</signature>
                        <name>Proxy</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>RequestTimeout</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>SeparateConnectionGroup</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Source</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>AForge.Video.NewFrameEventHandler</signature>
                        <name>NewFrame</name>
                    </event>
                    <event>
                        <signature>AForge.Video.PlayingFinishedEventHandler</signature>
                        <name>PlayingFinished</name>
                    </event>
                    <event>
                        <signature>AForge.Video.VideoSourceErrorEventHandler</signature>
                        <name>VideoSourceError</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>AForge.Video.NewFrameEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Frame</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Bitmap</signature>
                        <name>frame</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>Frame</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.NewFrameEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, AForge.Video.NewFrameEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, AForge.Video.NewFrameEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.PlayingFinishedEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, AForge.Video.ReasonToFinishPlaying, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, AForge.Video.ReasonToFinishPlaying)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.ReasonToFinishPlaying</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>AForge.Video.ReasonToFinishPlaying</signature>
                        <name>DeviceLost</name>
                    </field>
                    <field>
                        <signature>AForge.Video.ReasonToFinishPlaying</signature>
                        <name>EndOfStreamReached</name>
                    </field>
                    <field>
                        <signature>AForge.Video.ReasonToFinishPlaying</signature>
                        <name>StoppedByUser</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                    <field>
                        <signature>AForge.Video.ReasonToFinishPlaying</signature>
                        <name>VideoSourceError</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.ScreenCaptureStream</name>
                <methodlist>
                    <method>
                        <signature>void(System.Drawing.Rectangle)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.NewFrameEventHandler)</signature>
                        <name>add_NewFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.PlayingFinishedEventHandler)</signature>
                        <name>add_PlayingFinished</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.VideoSourceErrorEventHandler)</signature>
                        <name>add_VideoSourceError</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Free</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_BytesReceived</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FrameInterval</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FramesReceived</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRunning</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>get_Region</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Source</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.NewFrameEventHandler)</signature>
                        <name>remove_NewFrame</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.PlayingFinishedEventHandler)</signature>
                        <name>remove_PlayingFinished</name>
                    </method>
                    <method>
                        <signature>void(AForge.Video.VideoSourceErrorEventHandler)</signature>
                        <name>remove_VideoSourceError</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_FrameInterval</name>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Rectangle)</signature>
                        <name>set_Region</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SignalToStop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Start</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Stop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WaitForStop</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>WorkerThread</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>frameInterval</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>framesReceived</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.NewFrameEventHandler</signature>
                        <name>NewFrame</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.PlayingFinishedEventHandler</signature>
                        <name>PlayingFinished</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Rectangle</signature>
                        <name>region</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Threading.ManualResetEvent</signature>
                        <name>stopEvent</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Threading.Thread</signature>
                        <name>thread</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.VideoSourceErrorEventHandler</signature>
                        <name>VideoSourceError</name>
                        <newname>g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>BytesReceived</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FrameInterval</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FramesReceived</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRunning</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Rectangle()</signature>
                        <name>Region</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Source</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>AForge.Video.NewFrameEventHandler</signature>
                        <name>NewFrame</name>
                    </event>
                    <event>
                        <signature>AForge.Video.PlayingFinishedEventHandler</signature>
                        <name>PlayingFinished</name>
                    </event>
                    <event>
                        <signature>AForge.Video.VideoSourceErrorEventHandler</signature>
                        <name>VideoSourceError</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>AForge.Video.VideoException</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.VideoSourceErrorEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Description</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>description</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Description</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>AForge.Video.VideoSourceErrorEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, AForge.Video.VideoSourceErrorEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, AForge.Video.VideoSourceErrorEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
        </module>
        <module>
            <name>ModifyImg.exe</name>
            <type>
                <name>ModifyImg.About</name>
                <newname>al</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>About_Load</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyCompany</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyCopyright</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyDescription</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyProduct</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyTitle</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyVersion</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>okButton_Click</name>
                        <newname>h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>labelCompanyName</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>labelCopyright</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>labelProductName</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>labelVersion</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>logoPictureBox</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>okButton</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TableLayoutPanel</signature>
                        <name>tableLayoutPanel</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>textBoxDescription</name>
                        <newname>h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ModifyImg.Camera</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>bntCancel_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>bntCapture_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>bntOK_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.FormClosingEventArgs)</signature>
                        <name>Camera_FormClosing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>Camera_Load</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, AForge.Video.NewFrameEventArgs)</signature>
                        <name>FinalFrame_NewFrame</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Bitmap</signature>
                        <name>bmp</name>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCapture</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOK</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.FilterInfoCollection</signature>
                        <name>CaptureDevice</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>capturePic</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>AForge.Video.DirectShow.VideoCaptureDevice</signature>
                        <name>Cmr</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>cmrShow</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ComboBox</signature>
                        <name>comboBox</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>KT_loi</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Ok</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ModifyImg.Files</name>
                <newname>a6</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_img</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GoFullscreen</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>keypressed</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OpenCmr</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OpenFile</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>OpenwithPaint</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PrintImg</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Drawing.Printing.PrintPageEventArgs)</signature>
                        <name>printImg_event</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SaveFile</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(System.Drawing.Bitmap)</signature>
                        <name>set_img</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetBackgrounDesktop</name>
                        <newname>m</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Bitmap</signature>
                        <name>bmImage</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>DoXoay</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Opened</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Saved</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strPathOpen</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>strPathSave</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>zoom</name>
                        <newname>e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ModifyImg.FilterImg</name>
                <newname>ak</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap, int32, int32, int32, int32, int32)</signature>
                        <name>ChangeValue</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToAdaptiveSmoothing</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToAdditiveNoise</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToBilateralSmoothing</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToBlur</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToBrightnessCorrection</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToClosing</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToContrastCorrection</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToDilatation</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToErosion</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToEuclideanColorFiltering</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToExtractBiggestBlob</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToExtractChannel</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToExtractNormalizedRGBChannel</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToFlatFieldCorrection</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToGammaCorrection</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToGaussianBlur</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToGrayScale</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToGrayscaleRMY</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToHistogramEqualization</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToHSLFiltering</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToHueModifier</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToInvert</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToJitter</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToMean</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToMedian</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToOilPainting</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToOpening</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToPixellate</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToRotateChannels</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToSaltAndPepperNoise</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToSaturationCorrection</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToSepia</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToSharpen</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToSimplePosterization</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToWaterWave</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(System.Drawing.Bitmap)</signature>
                        <name>ToYCbCrExtractChannel</name>
                        <newname>af</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ModifyImg.mainfrm</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>About_Click</name>
                        <newname>bx</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Cancel_Click</name>
                        <newname>bm</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Done_Click</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Flip1_Click</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Flip2_Click</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_10_Click</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_11_Click</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_12_Click</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_13_Click</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_14_Click</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_15_Click</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_16_Click</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_17_Click</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_18_Click</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_19_Click</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_2_Click</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_20_Click</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_3_Click</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_4_Click</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_5_Click</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_6_Click</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_7_Click</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_8_Click</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Icon_9_Click</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Ok_Click</name>
                        <newname>bn</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_Rotate90_Click</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_UnDone_Click</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_ZoomIn_Click</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btn_ZoomOut_Click</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnColor_Click</name>
                        <newname>bu</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnDrawCircle_Click</name>
                        <newname>bo</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnDrawLine_Click</name>
                        <newname>br</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnDrawRectangle_Click</name>
                        <newname>bq</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnDrawTriangle_Click</name>
                        <newname>bp</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnRedo_Click</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnUndo_Click</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>button1_Click</name>
                        <newname>al</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>button1_Click_1</name>
                        <newname>bs</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>button2_Click</name>
                        <newname>ak</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CBXoay</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>checkUpdateToolStripMenuItem_Click</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>draw_Click</name>
                        <newname>b4</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DrawOnImg</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>exit_Click</name>
                        <newname>b0</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Filter</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>filter_Click</name>
                        <newname>b6</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>fullscreen_Click</name>
                        <newname>b1</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>imageOpen_Click</name>
                        <newname>b3</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Load_all_default_filter1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Load_all_default_filter2</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Load_all_default_filter3</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Load_all_default_filter4</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Load_all_default_filter5</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Load_all_default_filter6</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Load_all_default_filter7</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Load_all_default_filter8</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Load_FilterPanel</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.FormClosingEventArgs)</signature>
                        <name>mainForm_FormClosing</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.FormClosedEventArgs)</signature>
                        <name>mainfrm_FormClosed</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>OpenCamera_Click</name>
                        <newname>bv</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>openWithpaint_Click</name>
                        <newname>by</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox1_Click</name>
                        <newname>am</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox10_Click</name>
                        <newname>ay</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox11_Click</name>
                        <newname>av</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox12_Click</name>
                        <newname>a2</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox13_Click</name>
                        <newname>a5</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox14_Click</name>
                        <newname>a7</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox15_Click</name>
                        <newname>a1</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox16_Click</name>
                        <newname>ba</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox17_Click</name>
                        <newname>bh</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox18_Click</name>
                        <newname>bj</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox19_Click</name>
                        <newname>bf</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox2_Click</name>
                        <newname>au</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox20_Click</name>
                        <newname>bc</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox21_Click</name>
                        <newname>a8</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox22_Click</name>
                        <newname>bi</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox23_Click</name>
                        <newname>bb</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox24_Click</name>
                        <newname>bd</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox25_Click</name>
                        <newname>be</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox26_Click</name>
                        <newname>bl</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox27_Click</name>
                        <newname>a6</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox28_Click</name>
                        <newname>a9</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox29_Click</name>
                        <newname>aw</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox3_Click</name>
                        <newname>ao</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox30_Click</name>
                        <newname>bg</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox31_Click</name>
                        <newname>an</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox32_Click</name>
                        <newname>a4</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox33_Click</name>
                        <newname>az</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox34_Click</name>
                        <newname>a0</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox35_Click</name>
                        <newname>bk</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox36_Click</name>
                        <newname>a3</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox4_Click</name>
                        <newname>ap</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox5_Click</name>
                        <newname>aq</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox6_Click</name>
                        <newname>at</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox7_Click</name>
                        <newname>as</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox8_Click</name>
                        <newname>ar</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>pictureBox9_Click</name>
                        <newname>ax</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>pictureDraw_MouseDown</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>pictureDraw_MouseMove</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>pictureDraw_MouseUp_1</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>print_Click</name>
                        <newname>bw</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Resize_PanelZoom</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Rotate</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>rotateToolStripMenuItem_Click</name>
                        <newname>b5</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>save_Click</name>
                        <newname>b2</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>setdesktopBackground_Click</name>
                        <newname>bz</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>TakeVerOnServer</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>trackBar_Blue_Scroll</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>trackBar_Bright_Scroll</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>trackBar_Contrast_Scroll</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>trackBar_DoXoay_Scroll</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>trackBar_Green_Scroll</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>trackBar_Red_Scroll</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>trBSizePen_Scroll</name>
                        <newname>bt</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>txt_DoXoay_Click</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>txt_DoXoay_KeyDown</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UnRedo</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>Aboutmenu</name>
                        <newname>ak</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>Background_Rotate</name>
                        <newname>de</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Bitmap</signature>
                        <name>bm</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Cancel</name>
                        <newname>bu</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Done</name>
                        <newname>dq</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Flip1</name>
                        <newname>dm</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Flip2</name>
                        <newname>dn</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_1</name>
                        <newname>bi</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_10</name>
                        <newname>bb</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_11</name>
                        <newname>ba</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_12</name>
                        <newname>a9</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_13</name>
                        <newname>a8</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_14</name>
                        <newname>a7</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_15</name>
                        <newname>a6</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_16</name>
                        <newname>a5</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_17</name>
                        <newname>a4</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_18</name>
                        <newname>a3</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_19</name>
                        <newname>a2</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_2</name>
                        <newname>bd</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_20</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_3</name>
                        <newname>a0</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_4</name>
                        <newname>az</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_5</name>
                        <newname>bh</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_6</name>
                        <newname>be</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_7</name>
                        <newname>bg</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_8</name>
                        <newname>bf</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Icon_9</name>
                        <newname>bc</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Ok</name>
                        <newname>bt</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Pencil</name>
                        <newname>bn</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_Rotate90</name>
                        <newname>df</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_UnDone</name>
                        <newname>dp</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_ZoomIn</name>
                        <newname>bq</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btn_ZoomOut</name>
                        <newname>bp</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnColor</name>
                        <newname>aq</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnDrawCircle</name>
                        <newname>av</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnDrawLine</name>
                        <newname>au</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnDrawRectangle</name>
                        <newname>at</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnDrawTriangle</name>
                        <newname>as</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnRedo</name>
                        <newname>bl</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnUndo</name>
                        <newname>bm</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>cameraToolStripMenuItem</name>
                        <newname>ac</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>CheckUpdate</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>checkUpdateToolStripMenuItem</name>
                        <newname>dr</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ChooseTypeDraw</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>colorDraw</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>w</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>CustomBox</name>
                        <newname>bw</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ColorDialog</signature>
                        <name>dalColorDraw</name>
                        <newname>aw</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>DefaultBox</name>
                        <newname>b4</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>Drawbox</name>
                        <newname>ao</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>drawToolStripMenuItem</name>
                        <newname>ae</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>exitToolStripMenuItem</name>
                        <newname>al</newname>
                    </field>
                    <field>
                        <signature>ModifyImg.Files</signature>
                        <name>f</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>filterToolStripMenuItem</name>
                        <newname>af</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>fullscreenToolStripMenuItem</name>
                        <newname>ad</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>grDrawIcon</name>
                        <newname>ay</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox_CustomFilter</name>
                        <newname>bv</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox_DefaultFilter</name>
                        <newname>b3</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox_Flip</name>
                        <newname>dl</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBoxRotate</name>
                        <newname>dd</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>height</name>
                        <newname>n</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Icon</signature>
                        <name>icon</name>
                        <newname>r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>imageToolStripMenuItem</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>indexUndoRedo</name>
                        <newname>t</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label_bright</name>
                        <newname>b0</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label_Contrast</name>
                        <newname>cg</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>cd</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>b2</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label3</name>
                        <newname>bz</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label4</name>
                        <newname>by</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label5</name>
                        <newname>bx</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label6</name>
                        <newname>dj</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label7</name>
                        <newname>di</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label8</name>
                        <newname>do</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblColorPen</name>
                        <newname>bj</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblDrawShape</name>
                        <newname>ax</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblSizepen</name>
                        <newname>bk</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>mainPicture</name>
                        <newname>x</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.MenuStrip</signature>
                        <name>menuStrip</name>
                        <newname>y</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>moreToolStripMenuItem</name>
                        <newname>ag</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>numberDraw</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>openToolStripMenuItem</name>
                        <newname>z</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>openWithToolStripMenuItem</name>
                        <newname>ah</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>panel_ZoomIMG</name>
                        <newname>br</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>panelDraw</name>
                        <newname>am</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>panelFilter</name>
                        <newname>bo</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>panelRotate</name>
                        <newname>dc</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Pen</signature>
                        <name>pen</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox_Filter</name>
                        <newname>bs</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox1</name>
                        <newname>cc</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox10</name>
                        <newname>co</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox11</name>
                        <newname>cl</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox12</name>
                        <newname>cp</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox13</name>
                        <newname>cx</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox14</name>
                        <newname>cv</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox15</name>
                        <newname>ct</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox16</name>
                        <newname>c2</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox17</name>
                        <newname>c7</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox18</name>
                        <newname>c9</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox19</name>
                        <newname>c6</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox2</name>
                        <newname>ck</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox20</name>
                        <newname>cz</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox21</name>
                        <newname>c0</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox22</name>
                        <newname>c8</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox23</name>
                        <newname>cy</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox24</name>
                        <newname>c4</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox25</name>
                        <newname>c5</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox26</name>
                        <newname>db</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox27</name>
                        <newname>cu</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox28</name>
                        <newname>c1</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox29</name>
                        <newname>cm</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox3</name>
                        <newname>ca</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox30</name>
                        <newname>c3</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox31</name>
                        <newname>cb</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox32</name>
                        <newname>cw</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox33</name>
                        <newname>cr</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox34</name>
                        <newname>cs</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox35</name>
                        <newname>da</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox36</name>
                        <newname>cq</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox4</name>
                        <newname>b8</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox5</name>
                        <newname>b9</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox6</name>
                        <newname>b6</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox7</name>
                        <newname>b5</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox8</name>
                        <newname>b7</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBox9</name>
                        <newname>cn</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBoxRotate</name>
                        <newname>dk</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureDraw</name>
                        <newname>an</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>pnlDraw</name>
                        <newname>ar</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Point</signature>
                        <name>PointA</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Point</signature>
                        <name>PointB</name>
                        <newname>p</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Point</signature>
                        <name>PointC</name>
                        <newname>q</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Point</signature>
                        <name>PointFinish</name>
                        <newname>i</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Point</signature>
                        <name>PointStart</name>
                        <newname>h</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PointX</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PointY</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>printToolStripMenuItem</name>
                        <newname>ai</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>rotateToolStripMenuItem</name>
                        <newname>ce</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>saveToolStripMenuItem</name>
                        <newname>aa</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>scoreX</name>
                        <newname>u</newname>
                    </field>
                    <field>
                        <signature>float32</signature>
                        <name>scoreY</name>
                        <newname>v</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>setAsToolStripMenuItem</name>
                        <newname>aj</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>sizepen</name>
                        <newname>f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TrackBar</signature>
                        <name>trackBar_Blue</name>
                        <newname>ch</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TrackBar</signature>
                        <name>trackBar_Bright</name>
                        <newname>b1</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TrackBar</signature>
                        <name>trackBar_Contrast</name>
                        <newname>cf</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TrackBar</signature>
                        <name>trackBar_DoXoay</name>
                        <newname>dh</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TrackBar</signature>
                        <name>trackBar_Green</name>
                        <newname>ci</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TrackBar</signature>
                        <name>trackBar_Red</name>
                        <newname>cj</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TrackBar</signature>
                        <name>trBSizePen</name>
                        <newname>ap</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txt_DoXoay</name>
                        <newname>dg</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.Bitmap&gt;</signature>
                        <name>UndoRedo</name>
                        <newname>s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>width</name>
                        <newname>m</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ModifyImg.Program</name>
                <newname>v</newname>
                <methodlist>
                    <method>
                        <signature>void(string[])</signature>
                        <name>Main</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ModifyImg.Properties.Resources</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__1</name>
                        <newname>ah</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__10</name>
                        <newname>ag</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__11</name>
                        <newname>af</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__12</name>
                        <newname>ae</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__13</name>
                        <newname>ad</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__14</name>
                        <newname>ac</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__15</name>
                        <newname>ab</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__16</name>
                        <newname>aa</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__17</name>
                        <newname>z</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__18</name>
                        <newname>y</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__19</name>
                        <newname>x</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__2</name>
                        <newname>w</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__20</name>
                        <newname>v</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__3</name>
                        <newname>u</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__4</name>
                        <newname>t</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__5</name>
                        <newname>s</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__6</name>
                        <newname>r</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__7</name>
                        <newname>q</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__8</name>
                        <newname>p</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get__9</name>
                        <newname>o</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_arrows</name>
                        <newname>n</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_color</name>
                        <newname>m</newname>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                        <newname>ai</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_ellipse</name>
                        <newname>l</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_flip_Horizontal</name>
                        <newname>k</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_flip_Vertical</name>
                        <newname>j</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Line</name>
                        <newname>i</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_no_image_icon</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_point</name>
                        <newname>g</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_rectangle</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                        <newname>aj</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_tải_xuống</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_triangle</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_undo_97264</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_Z_out</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>get_zoom_in</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_1</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_10</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_11</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_12</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_13</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_14</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_15</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_16</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_17</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_18</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_19</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_2</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_20</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_3</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_4</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_5</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_6</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_7</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_8</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>_9</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>arrows</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>color</name>
                    </property>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>Culture</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>ellipse</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>flip_Horizontal</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>flip_Vertical</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>Line</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>no_image_icon</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>point</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>rectangle</name>
                    </property>
                    <property>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>ResourceManager</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>tải_xuống</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>triangle</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>undo_97264</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>Z_out</name>
                    </property>
                    <property>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>zoom_in</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ModifyImg.Properties.Settings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>ModifyImg.Properties.Settings()</signature>
                        <name>get_Default</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>ModifyImg.Properties.Settings</signature>
                        <name>defaultInstance</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>ModifyImg.Properties.Settings()</signature>
                        <name>Default</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>ModifyImg.RotateImage</name>
                <newname>o</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Drawing.Bitmap, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap()</signature>
                        <name>Rotate</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Drawing.Bitmap</signature>
                        <name>Bm</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Dx</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ModifyImg.Update</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ModifyImg.wait</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>ModifyImg.Wallpaper</name>
                <newname>a4</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SetDesktopWallpaper</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>int32(unsigned int32, unsigned int32, string, unsigned int32)</signature>
                        <name>SystemParametersInfo</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>SPI_SETDESKWALLPAPER</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>SPIF_SENDWININICHANGE</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>377</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>2971</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>1368</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties</description>
            <statistic>688</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events</description>
            <statistic>22</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>82</statistic>
            <statistic>21.75%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>599</statistic>
            <statistic>20.16%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>1139</statistic>
            <statistic>83.26%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00%</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events Renamed</description>
            <statistic>0</statistic>
            <statistic>0.00%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>282</statistic>
            <statistic>9.49%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'b'</description>
            <statistic>65</statistic>
            <statistic>2.19%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'c'</description>
            <statistic>33</statistic>
            <statistic>1.11%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'd'</description>
            <statistic>17</statistic>
            <statistic>0.57%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'h'</description>
            <statistic>13</statistic>
            <statistic>0.44%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'e'</description>
            <statistic>12</statistic>
            <statistic>0.40%</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'g'</description>
            <statistic>10</statistic>
            <statistic>0.34%</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>